<init>()V
0:  aload_0 // LocalVariable{type=org.vesalainen.bcc.ClassFile$ClassType@6438804f, simpleName=this}
1:  invokespecial 9 // <init> ()V
4:  return
pipe()V
0:  return
comma()V
0:  return
$parseExpression(Lorg/vesalainen/parser/util/InputReader;Lorg/vesalainen/grammar/Grammar;)Ljavax/lang/model/type/TypeMirror;
0:  bipush 100 //'d'
2:  newarray 10 // int[]
4:  astore 7 // LocalVariable{type=int[], simpleName=$stateStack}
6:  bipush 100 //'d'
8:  newarray 10 // int[]
10:  astore 8 // LocalVariable{type=int[], simpleName=$typeStack}
12:  bipush 20
14:  anewarray 18 // java/lang/Object
17:  checkcast 20 // [Ljava/lang/Object;
20:  astore 9 // LocalVariable{type=java.lang.Object[], simpleName=$valueStack}
22:  aload 9 // LocalVariable{type=java.lang.Object[], simpleName=$valueStack}
24:  bipush 12
26:  bipush 100 //'d'
28:  anewarray 18 // java/lang/Object
31:  aastore
32:  aconst_null
33:  astore 10 // LocalVariable{type=java.lang.Object, simpleName=$curDECLARED}
35:  aconst_null
36:  astore 11 // LocalVariable{type=java.lang.Throwable, simpleName=$throwable}
[reset]:
38:  iconst_m1
39:  istore 4 // LocalVariable{type=int, simpleName=$token}
41:  iconst_m1
42:  istore 5 // LocalVariable{type=int, simpleName=$curTok}
44:  bipush 8
46:  istore 6 // LocalVariable{type=int, simpleName=$curType}
48:  iconst_m1
49:  istore_3 // LocalVariable{type=int, simpleName=$sp}
50:  iinc 3 1 // $sp+=1
53:  aload 7 // LocalVariable{type=int[], simpleName=$stateStack}
55:  iload_3 // LocalVariable{type=int, simpleName=$sp}
56:  iconst_1
57:  iastore
[start]:
58:  iload 4 // LocalVariable{type=int, simpleName=$token}
60:  ifge 66 //[afterShift]
63:  jsr 672 //[shiftSubroutine]
[afterShift]:
66:  jsr 1007 //[updateValueStack]
69:  aload 7 // LocalVariable{type=int[], simpleName=$stateStack}
71:  iload_3 // LocalVariable{type=int, simpleName=$sp}
72:  iaload
73:  tableswitch // default -> [branch1]
   // 1 -> [State 1]
   // 2 -> [State 2]
   // 3 -> [State 3]
   // 4 -> [State 4]
   // 5 -> [State 5]
   // 6 -> [State 6]
   // 7 -> [State 7]
   // 8 -> [State 8]
   // 9 -> [State 9]
   // 10 -> [State 10]
   // 11 -> [State 11]
   // 12 -> [State 12]
[branch1]:
136:  new 22 // org/vesalainen/bcc/SwitchException
139:  dup
140:  invokespecial 23 // <init> ()V
143:  athrow
[State 1]:
144:  iload 5 // LocalVariable{type=int, simpleName=$curTok}
146:  lookupswitch // default -> [State 12syntaxError, State 11syntaxError, State 10syntaxError, State 9syntaxError, State 8syntaxError, State 7syntaxError, State 6syntaxError, State 5syntaxError, State 4syntaxError, State 3syntaxError, State 2syntaxError, State 1syntaxError, syntaxError]
   // 6 -> [anonymousTerminal Shift Rule 10-action]
   // 7 -> [symbolName Shift Rule 9-action]
   // 14 -> ['?{' Shift State 2-action]
   // 17 -> ['?{' Shift State 3-action]
[State 2]:
188:  iload 5 // LocalVariable{type=int, simpleName=$curTok}
190:  lookupswitch // default -> [State 12syntaxError, State 11syntaxError, State 10syntaxError, State 9syntaxError, State 8syntaxError, State 7syntaxError, State 6syntaxError, State 5syntaxError, State 4syntaxError, State 3syntaxError, State 2syntaxError, State 1syntaxError, syntaxError]
   // 6 -> [anonymousTerminal Shift Rule 10-action]
   // 7 -> [symbolName Shift Rule 9-action]
   // 14 -> ['?{' Shift State 2-action]
   // 17 -> ['?{' Shift State 3-action]
[State 3]:
232:  iload 5 // LocalVariable{type=int, simpleName=$curTok}
234:  lookupswitch // default -> [State 12syntaxError, State 11syntaxError, State 10syntaxError, State 9syntaxError, State 8syntaxError, State 7syntaxError, State 6syntaxError, State 5syntaxError, State 4syntaxError, State 3syntaxError, State 2syntaxError, State 1syntaxError, syntaxError]
   // 6 -> [anonymousTerminal Shift Rule 10-action]
   // 7 -> [symbolName Shift Rule 9-action]
   // 14 -> ['?{' Shift State 2-action]
   // 17 -> ['?{' Shift State 3-action]
[State 4]:
276:  iload 5 // LocalVariable{type=int, simpleName=$curTok}
278:  dup
279:  iconst_0
280:  if_icmpne 287 //[branch2]
283:  pop
284:  goto  1550 //[Eof reduce Rule 0-action, Rule 0]
[branch2]:
287:  dup
288:  bipush 11
290:  if_icmpne 297 //[branch3]
293:  pop
294:  goto  1148 //['?' Shift Rule 1-action]
[branch3]:
297:  dup
298:  bipush 12
300:  if_icmpne 307 //[branch4]
303:  pop
304:  goto  1124 //['?' Shift Rule 3-action]
[branch4]:
307:  dup
308:  bipush 13
310:  if_icmpne 317 //[branch5]
313:  pop
314:  goto  1136 //['¿' Shift Rule 2-action]
[branch5]:
317:  pop
318:  goto  2053 //[State 12syntaxError, State 11syntaxError, State 10syntaxError, State 9syntaxError, State 8syntaxError, State 7syntaxError, State 6syntaxError, State 5syntaxError, State 4syntaxError, State 3syntaxError, State 2syntaxError, State 1syntaxError, syntaxError]
[State 5]:
321:  iload 5 // LocalVariable{type=int, simpleName=$curTok}
323:  dup
324:  bipush 8
326:  if_icmpne 333 //[branch6]
329:  pop
330:  goto  1160 //[pipe Shift State 9-action]
[branch6]:
333:  dup
334:  bipush 15
336:  if_icmpne 343 //[branch7]
339:  pop
340:  goto  1175 //['}' Shift Rule 6-action]
[branch7]:
343:  pop
344:  goto  2053 //[State 12syntaxError, State 11syntaxError, State 10syntaxError, State 9syntaxError, State 8syntaxError, State 7syntaxError, State 6syntaxError, State 5syntaxError, State 4syntaxError, State 3syntaxError, State 2syntaxError, State 1syntaxError, syntaxError]
[State 6]:
347:  iload 5 // LocalVariable{type=int, simpleName=$curTok}
349:  lookupswitch // default -> [State 12syntaxError, State 11syntaxError, State 10syntaxError, State 9syntaxError, State 8syntaxError, State 7syntaxError, State 6syntaxError, State 5syntaxError, State 4syntaxError, State 3syntaxError, State 2syntaxError, State 1syntaxError, syntaxError]
   // 8 -> [pipe reduce Rule 11-action, '}' reduce Rule 11-action, Rule 11]
   // 11 -> ['?' Shift Rule 1-action]
   // 12 -> ['?' Shift Rule 3-action]
   // 13 -> ['¿' Shift Rule 2-action]
   // 15 -> [pipe reduce Rule 11-action, '}' reduce Rule 11-action, Rule 11]
[State 7]:
400:  iload 5 // LocalVariable{type=int, simpleName=$curTok}
402:  dup
403:  bipush 9
405:  if_icmpne 412 //[branch8]
408:  pop
409:  goto  1187 //[comma Shift State 10-action]
[branch8]:
412:  dup
413:  bipush 15
415:  if_icmpne 422 //[branch9]
418:  pop
419:  goto  1202 //['}' Shift Rule 4-action]
[branch9]:
422:  pop
423:  goto  2053 //[State 12syntaxError, State 11syntaxError, State 10syntaxError, State 9syntaxError, State 8syntaxError, State 7syntaxError, State 6syntaxError, State 5syntaxError, State 4syntaxError, State 3syntaxError, State 2syntaxError, State 1syntaxError, syntaxError]
[State 8]:
426:  iload 5 // LocalVariable{type=int, simpleName=$curTok}
428:  lookupswitch // default -> [State 12syntaxError, State 11syntaxError, State 10syntaxError, State 9syntaxError, State 8syntaxError, State 7syntaxError, State 6syntaxError, State 5syntaxError, State 4syntaxError, State 3syntaxError, State 2syntaxError, State 1syntaxError, syntaxError]
   // 9 -> [comma reduce Rule 8-action, '}' reduce Rule 8-action, Rule 8]
   // 11 -> ['?' Shift Rule 1-action]
   // 12 -> ['?' Shift Rule 3-action]
   // 13 -> ['¿' Shift Rule 2-action]
   // 15 -> [comma reduce Rule 8-action, '}' reduce Rule 8-action, Rule 8]
[State 9]:
480:  iload 5 // LocalVariable{type=int, simpleName=$curTok}
482:  lookupswitch // default -> [State 12syntaxError, State 11syntaxError, State 10syntaxError, State 9syntaxError, State 8syntaxError, State 7syntaxError, State 6syntaxError, State 5syntaxError, State 4syntaxError, State 3syntaxError, State 2syntaxError, State 1syntaxError, syntaxError]
   // 6 -> [anonymousTerminal Shift Rule 10-action]
   // 7 -> [symbolName Shift Rule 9-action]
   // 14 -> ['?{' Shift State 2-action]
   // 17 -> ['?{' Shift State 3-action]
[State 10]:
524:  iload 5 // LocalVariable{type=int, simpleName=$curTok}
526:  lookupswitch // default -> [State 12syntaxError, State 11syntaxError, State 10syntaxError, State 9syntaxError, State 8syntaxError, State 7syntaxError, State 6syntaxError, State 5syntaxError, State 4syntaxError, State 3syntaxError, State 2syntaxError, State 1syntaxError, syntaxError]
   // 6 -> [anonymousTerminal Shift Rule 10-action]
   // 7 -> [symbolName Shift Rule 9-action]
   // 14 -> ['?{' Shift State 2-action]
   // 17 -> ['?{' Shift State 3-action]
[State 11]:
568:  iload 5 // LocalVariable{type=int, simpleName=$curTok}
570:  lookupswitch // default -> [State 12syntaxError, State 11syntaxError, State 10syntaxError, State 9syntaxError, State 8syntaxError, State 7syntaxError, State 6syntaxError, State 5syntaxError, State 4syntaxError, State 3syntaxError, State 2syntaxError, State 1syntaxError, syntaxError]
   // 8 -> [pipe reduce Rule 12-action, '}' reduce Rule 12-action, Rule 12]
   // 11 -> ['?' Shift Rule 1-action]
   // 12 -> ['?' Shift Rule 3-action]
   // 13 -> ['¿' Shift Rule 2-action]
   // 15 -> [pipe reduce Rule 12-action, '}' reduce Rule 12-action, Rule 12]
[State 12]:
620:  iload 5 // LocalVariable{type=int, simpleName=$curTok}
622:  lookupswitch // default -> [State 12syntaxError, State 11syntaxError, State 10syntaxError, State 9syntaxError, State 8syntaxError, State 7syntaxError, State 6syntaxError, State 5syntaxError, State 4syntaxError, State 3syntaxError, State 2syntaxError, State 1syntaxError, syntaxError]
   // 9 -> [comma reduce Rule 7-action, '}' reduce Rule 7-action, Rule 7]
   // 11 -> ['?' Shift Rule 1-action]
   // 12 -> ['?' Shift Rule 3-action]
   // 13 -> ['¿' Shift Rule 2-action]
   // 15 -> [comma reduce Rule 7-action, '}' reduce Rule 7-action, Rule 7]
[shiftSubroutine]:
672:  astore 12 // LocalVariable{type=ReturnAddress, simpleName=$subroutineReturnAddressName}
[shiftStart]:
674:  aload 7 // LocalVariable{type=int[], simpleName=$stateStack}
676:  iload_3 // LocalVariable{type=int, simpleName=$sp}
677:  iaload
678:  tableswitch // default -> [branch11]
   // 1 -> [$input1]
   // 2 -> [$input1]
   // 3 -> [$input1]
   // 4 -> [$input2]
   // 5 -> [$input3]
   // 6 -> [$input4]
   // 7 -> [$input5]
   // 8 -> [$input6]
   // 9 -> [$input1]
   // 10 -> [$input1]
   // 11 -> [$input4]
   // 12 -> [$input6]
[branch11]:
740:  new 22 // org/vesalainen/bcc/SwitchException
743:  dup
744:  invokespecial 23 // <init> ()V
747:  athrow
[$input1]:
748:  aload_0 // LocalVariable{type=org.vesalainen.bcc.ClassFile$ClassType@6438804f, simpleName=this}
749:  aload_1 // ElementImpl{name=$inputReader}
750:  invokespecial 31 // $input1 (Lorg/vesalainen/parser/util/InputReader;)I
753:  istore 4 // LocalVariable{type=int, simpleName=$token}
755:  iload 4 // LocalVariable{type=int, simpleName=$token}
757:  ifge 838 //[branch10]
760:  goto  2053 //[State 12syntaxError, State 11syntaxError, State 10syntaxError, State 9syntaxError, State 8syntaxError, State 7syntaxError, State 6syntaxError, State 5syntaxError, State 4syntaxError, State 3syntaxError, State 2syntaxError, State 1syntaxError, syntaxError]
[$input2]:
763:  aload_0 // LocalVariable{type=org.vesalainen.bcc.ClassFile$ClassType@6438804f, simpleName=this}
764:  aload_1 // ElementImpl{name=$inputReader}
765:  invokespecial 34 // $input2 (Lorg/vesalainen/parser/util/InputReader;)I
768:  istore 4 // LocalVariable{type=int, simpleName=$token}
770:  iload 4 // LocalVariable{type=int, simpleName=$token}
772:  ifge 838 //[branch10]
775:  goto  2053 //[State 12syntaxError, State 11syntaxError, State 10syntaxError, State 9syntaxError, State 8syntaxError, State 7syntaxError, State 6syntaxError, State 5syntaxError, State 4syntaxError, State 3syntaxError, State 2syntaxError, State 1syntaxError, syntaxError]
[$input3]:
778:  aload_0 // LocalVariable{type=org.vesalainen.bcc.ClassFile$ClassType@6438804f, simpleName=this}
779:  aload_1 // ElementImpl{name=$inputReader}
780:  invokespecial 37 // $input3 (Lorg/vesalainen/parser/util/InputReader;)I
783:  istore 4 // LocalVariable{type=int, simpleName=$token}
785:  iload 4 // LocalVariable{type=int, simpleName=$token}
787:  ifge 838 //[branch10]
790:  goto  2053 //[State 12syntaxError, State 11syntaxError, State 10syntaxError, State 9syntaxError, State 8syntaxError, State 7syntaxError, State 6syntaxError, State 5syntaxError, State 4syntaxError, State 3syntaxError, State 2syntaxError, State 1syntaxError, syntaxError]
[$input4]:
793:  aload_0 // LocalVariable{type=org.vesalainen.bcc.ClassFile$ClassType@6438804f, simpleName=this}
794:  aload_1 // ElementImpl{name=$inputReader}
795:  invokespecial 40 // $input4 (Lorg/vesalainen/parser/util/InputReader;)I
798:  istore 4 // LocalVariable{type=int, simpleName=$token}
800:  iload 4 // LocalVariable{type=int, simpleName=$token}
802:  ifge 838 //[branch10]
805:  goto  2053 //[State 12syntaxError, State 11syntaxError, State 10syntaxError, State 9syntaxError, State 8syntaxError, State 7syntaxError, State 6syntaxError, State 5syntaxError, State 4syntaxError, State 3syntaxError, State 2syntaxError, State 1syntaxError, syntaxError]
[$input5]:
808:  aload_0 // LocalVariable{type=org.vesalainen.bcc.ClassFile$ClassType@6438804f, simpleName=this}
809:  aload_1 // ElementImpl{name=$inputReader}
810:  invokespecial 43 // $input5 (Lorg/vesalainen/parser/util/InputReader;)I
813:  istore 4 // LocalVariable{type=int, simpleName=$token}
815:  iload 4 // LocalVariable{type=int, simpleName=$token}
817:  ifge 838 //[branch10]
820:  goto  2053 //[State 12syntaxError, State 11syntaxError, State 10syntaxError, State 9syntaxError, State 8syntaxError, State 7syntaxError, State 6syntaxError, State 5syntaxError, State 4syntaxError, State 3syntaxError, State 2syntaxError, State 1syntaxError, syntaxError]
[$input6]:
823:  aload_0 // LocalVariable{type=org.vesalainen.bcc.ClassFile$ClassType@6438804f, simpleName=this}
824:  aload_1 // ElementImpl{name=$inputReader}
825:  invokespecial 46 // $input6 (Lorg/vesalainen/parser/util/InputReader;)I
828:  istore 4 // LocalVariable{type=int, simpleName=$token}
830:  iload 4 // LocalVariable{type=int, simpleName=$token}
832:  ifge 838 //[branch10]
835:  goto  2053 //[State 12syntaxError, State 11syntaxError, State 10syntaxError, State 9syntaxError, State 8syntaxError, State 7syntaxError, State 6syntaxError, State 5syntaxError, State 4syntaxError, State 3syntaxError, State 2syntaxError, State 1syntaxError, syntaxError]
[branch10]:
838:  iload 4 // LocalVariable{type=int, simpleName=$token}
840:  istore 5 // LocalVariable{type=int, simpleName=$curTok}
842:  iload 5 // LocalVariable{type=int, simpleName=$curTok}
844:  lookupswitch // default -> [branch13]
   // 0 -> [$term-'?{', $term-'}', $term-'?{', $term-'¿', $term-'?', $term-'?', branch12]
   // 6 -> [$term-anonymousTerminal]
   // 7 -> [$term-symbolName]
   // 8 -> [$term-pipe]
   // 9 -> [$term-comma]
   // 11 -> [$term-'?{', $term-'}', $term-'?{', $term-'¿', $term-'?', $term-'?', branch12]
   // 12 -> [$term-'?{', $term-'}', $term-'?{', $term-'¿', $term-'?', $term-'?', branch12]
   // 13 -> [$term-'?{', $term-'}', $term-'?{', $term-'¿', $term-'?', $term-'?', branch12]
   // 14 -> [$term-'?{', $term-'}', $term-'?{', $term-'¿', $term-'?', $term-'?', branch12]
   // 15 -> [$term-'?{', $term-'}', $term-'?{', $term-'¿', $term-'?', $term-'?', branch12]
   // 17 -> [$term-'?{', $term-'}', $term-'?{', $term-'¿', $term-'?', $term-'?', branch12]
[branch13]:
944:  new 22 // org/vesalainen/bcc/SwitchException
947:  dup
948:  invokespecial 23 // <init> ()V
951:  athrow
[$term-anonymousTerminal]:
952:  aload_0 // LocalVariable{type=org.vesalainen.bcc.ClassFile$ClassType@6438804f, simpleName=this}
953:  aload_1 // ElementImpl{name=$inputReader}
954:  invokevirtual 52 // getString ()Ljava/lang/String;
957:  aload_2 // ElementImpl{name=GRAMMAR}
958:  invokevirtual 56 // anonymousTerminal (Ljava/lang/String;Lorg/vesalainen/grammar/Grammar;)Ljava/lang/String;
961:  astore 10 // LocalVariable{type=java.lang.Object, simpleName=$curDECLARED}
963:  bipush 12
965:  istore 6 // LocalVariable{type=int, simpleName=$curType}
967:  goto  1001 //[$term-'?{', $term-'}', $term-'?{', $term-'¿', $term-'?', $term-'?', branch12]
[$term-symbolName]:
970:  aload_0 // LocalVariable{type=org.vesalainen.bcc.ClassFile$ClassType@6438804f, simpleName=this}
971:  aload_1 // ElementImpl{name=$inputReader}
972:  invokevirtual 52 // getString ()Ljava/lang/String;
975:  invokevirtual 60 // symbolName (Ljava/lang/String;)Ljava/lang/String;
978:  astore 10 // LocalVariable{type=java.lang.Object, simpleName=$curDECLARED}
980:  bipush 12
982:  istore 6 // LocalVariable{type=int, simpleName=$curType}
984:  goto  1001 //[$term-'?{', $term-'}', $term-'?{', $term-'¿', $term-'?', $term-'?', branch12]
[$term-pipe]:
987:  bipush 8
989:  istore 6 // LocalVariable{type=int, simpleName=$curType}
991:  goto  1001 //[$term-'?{', $term-'}', $term-'?{', $term-'¿', $term-'?', $term-'?', branch12]
[$term-comma]:
994:  bipush 8
996:  istore 6 // LocalVariable{type=int, simpleName=$curType}
998:  goto  1001 //[$term-'?{', $term-'}', $term-'?{', $term-'¿', $term-'?', $term-'?', branch12]
[$term-'?{', $term-'}', $term-'?{', $term-'¿', $term-'?', $term-'?', branch12]:
1001:  aload_1 // ElementImpl{name=$inputReader}
1002:  invokevirtual 63 // clear ()V
1005:  ret // LocalVariable{type=ReturnAddress, simpleName=$subroutineReturnAddressName}
[updateValueStack]:
1007:  astore 12 // LocalVariable{type=ReturnAddress, simpleName=$subroutineReturnAddressName}
1009:  iload 6 // LocalVariable{type=int, simpleName=$curType}
1011:  dup
1012:  bipush 8
1014:  if_icmpne 1021 //[branch15]
1017:  pop
1018:  goto  1064 //[setCurrent-Void]
[branch15]:
1021:  dup
1022:  bipush 12
1024:  if_icmpne 1031 //[branch16]
1027:  pop
1028:  goto  1043 //[DECLARED-cur]
[branch16]:
1031:  pop
1032:  goto  1035 //[branch14]
[branch14]:
1035:  new 22 // org/vesalainen/bcc/SwitchException
1038:  dup
1039:  invokespecial 23 // <init> ()V
1042:  athrow
[DECLARED-cur]:
1043:  aload 8 // LocalVariable{type=int[], simpleName=$typeStack}
1045:  iload_3 // LocalVariable{type=int, simpleName=$sp}
1046:  iload 6 // LocalVariable{type=int, simpleName=$curType}
1048:  iastore
1049:  aload 9 // LocalVariable{type=java.lang.Object[], simpleName=$valueStack}
1051:  iload 6 // LocalVariable{type=int, simpleName=$curType}
1053:  aaload
1054:  checkcast 20 // [Ljava/lang/Object;
1057:  iload_3 // LocalVariable{type=int, simpleName=$sp}
1058:  aload 10 // LocalVariable{type=java.lang.Object, simpleName=$curDECLARED}
1060:  aastore
1061:  goto  1070 //[setCurrent-Exit]
[setCurrent-Void]:
1064:  aload 8 // LocalVariable{type=int[], simpleName=$typeStack}
1066:  iload_3 // LocalVariable{type=int, simpleName=$sp}
1067:  bipush 8
1069:  iastore
[setCurrent-Exit]:
1070:  ret // LocalVariable{type=ReturnAddress, simpleName=$subroutineReturnAddressName}
['?{' Shift State 2-action]:
1072:  iinc 3 1 // $sp+=1
1075:  aload 7 // LocalVariable{type=int[], simpleName=$stateStack}
1077:  iload_3 // LocalVariable{type=int, simpleName=$sp}
1078:  iconst_2
1079:  iastore
1080:  iconst_m1
1081:  istore 4 // LocalVariable{type=int, simpleName=$token}
1083:  goto  58 //[start]
['?{' Shift State 3-action]:
1086:  iinc 3 1 // $sp+=1
1089:  aload 7 // LocalVariable{type=int[], simpleName=$stateStack}
1091:  iload_3 // LocalVariable{type=int, simpleName=$sp}
1092:  iconst_3
1093:  iastore
1094:  iconst_m1
1095:  istore 4 // LocalVariable{type=int, simpleName=$token}
1097:  goto  58 //[start]
[anonymousTerminal Shift Rule 10-action]:
1100:  iinc 3 1 // $sp+=1
1103:  jsr 1214 //[Rule 10subroutine]
1106:  iconst_m1
1107:  istore 4 // LocalVariable{type=int, simpleName=$token}
1109:  goto  1256 //[symbol-goto]
[symbolName Shift Rule 9-action]:
1112:  iinc 3 1 // $sp+=1
1115:  jsr 1319 //[Rule 9subroutine]
1118:  iconst_m1
1119:  istore 4 // LocalVariable{type=int, simpleName=$token}
1121:  goto  1256 //[symbol-goto]
['?' Shift Rule 3-action]:
1124:  iinc 3 1 // $sp+=1
1127:  jsr 1361 //[Rule 3subroutine]
1130:  iconst_m1
1131:  istore 4 // LocalVariable{type=int, simpleName=$token}
1133:  goto  1403 //[expression-goto]
['¿' Shift Rule 2-action]:
1136:  iinc 3 1 // $sp+=1
1139:  jsr 1466 //[Rule 2subroutine]
1142:  iconst_m1
1143:  istore 4 // LocalVariable{type=int, simpleName=$token}
1145:  goto  1403 //[expression-goto]
['?' Shift Rule 1-action]:
1148:  iinc 3 1 // $sp+=1
1151:  jsr 1508 //[Rule 1subroutine]
1154:  iconst_m1
1155:  istore 4 // LocalVariable{type=int, simpleName=$token}
1157:  goto  1403 //[expression-goto]
[pipe Shift State 9-action]:
1160:  iinc 3 1 // $sp+=1
1163:  aload 7 // LocalVariable{type=int[], simpleName=$stateStack}
1165:  iload_3 // LocalVariable{type=int, simpleName=$sp}
1166:  bipush 9
1168:  iastore
1169:  iconst_m1
1170:  istore 4 // LocalVariable{type=int, simpleName=$token}
1172:  goto  58 //[start]
['}' Shift Rule 6-action]:
1175:  iinc 3 1 // $sp+=1
1178:  jsr 1556 //[Rule 6subroutine]
1181:  iconst_m1
1182:  istore 4 // LocalVariable{type=int, simpleName=$token}
1184:  goto  1403 //[expression-goto]
[comma Shift State 10-action]:
1187:  iinc 3 1 // $sp+=1
1190:  aload 7 // LocalVariable{type=int[], simpleName=$stateStack}
1192:  iload_3 // LocalVariable{type=int, simpleName=$sp}
1193:  bipush 10
1195:  iastore
1196:  iconst_m1
1197:  istore 4 // LocalVariable{type=int, simpleName=$token}
1199:  goto  58 //[start]
['}' Shift Rule 4-action]:
1202:  iinc 3 1 // $sp+=1
1205:  jsr 1604 //[Rule 4subroutine]
1208:  iconst_m1
1209:  istore 4 // LocalVariable{type=int, simpleName=$token}
1211:  goto  1403 //[expression-goto]
[Rule 10subroutine]:
1214:  astore 12 // LocalVariable{type=ReturnAddress, simpleName=$subroutineReturnAddressName}
1216:  iinc 3 -1 // $sp+=-1
1219:  aload 9 // LocalVariable{type=java.lang.Object[], simpleName=$valueStack}
1221:  bipush 12
1223:  aaload
1224:  checkcast 20 // [Ljava/lang/Object;
1227:  iload_3 // LocalVariable{type=int, simpleName=$sp}
1228:  aload_0 // LocalVariable{type=org.vesalainen.bcc.ClassFile$ClassType@6438804f, simpleName=this}
1229:  aload 9 // LocalVariable{type=java.lang.Object[], simpleName=$valueStack}
1231:  bipush 12
1233:  aaload
1234:  checkcast 20 // [Ljava/lang/Object;
1237:  iload_3 // LocalVariable{type=int, simpleName=$sp}
1238:  iconst_0
1239:  iadd
1240:  aaload
1241:  checkcast 65 // java/lang/String
1244:  invokevirtual 68 // symbol (Ljava/lang/String;)Ljava/lang/String;
1247:  aastore
1248:  aload 8 // LocalVariable{type=int[], simpleName=$typeStack}
1250:  iload_3 // LocalVariable{type=int, simpleName=$sp}
1251:  bipush 12
1253:  iastore
1254:  ret // LocalVariable{type=ReturnAddress, simpleName=$subroutineReturnAddressName}
[symbol-goto]:
1256:  aload 7 // LocalVariable{type=int[], simpleName=$stateStack}
1258:  iload_3 // LocalVariable{type=int, simpleName=$sp}
1259:  iaload
1260:  dup
1261:  iconst_1
1262:  if_icmpne 1269 //[branch18]
1265:  pop
1266:  goto  1664 //[Rule 5-goto-action]
[branch18]:
1269:  dup
1270:  iconst_2
1271:  if_icmpne 1278 //[branch19]
1274:  pop
1275:  goto  1664 //[Rule 5-goto-action]
[branch19]:
1278:  dup
1279:  iconst_3
1280:  if_icmpne 1287 //[branch20]
1283:  pop
1284:  goto  1664 //[Rule 5-goto-action]
[branch20]:
1287:  dup
1288:  bipush 9
1290:  if_icmpne 1297 //[branch21]
1293:  pop
1294:  goto  1664 //[Rule 5-goto-action]
[branch21]:
1297:  dup
1298:  bipush 10
1300:  if_icmpne 1307 //[branch22]
1303:  pop
1304:  goto  1664 //[Rule 5-goto-action]
[branch22]:
1307:  pop
1308:  goto  1311 //[branch17]
[branch17]:
1311:  new 22 // org/vesalainen/bcc/SwitchException
1314:  dup
1315:  invokespecial 23 // <init> ()V
1318:  athrow
[Rule 9subroutine]:
1319:  astore 12 // LocalVariable{type=ReturnAddress, simpleName=$subroutineReturnAddressName}
1321:  iinc 3 -1 // $sp+=-1
1324:  aload 9 // LocalVariable{type=java.lang.Object[], simpleName=$valueStack}
1326:  bipush 12
1328:  aaload
1329:  checkcast 20 // [Ljava/lang/Object;
1332:  iload_3 // LocalVariable{type=int, simpleName=$sp}
1333:  aload_0 // LocalVariable{type=org.vesalainen.bcc.ClassFile$ClassType@6438804f, simpleName=this}
1334:  aload 9 // LocalVariable{type=java.lang.Object[], simpleName=$valueStack}
1336:  bipush 12
1338:  aaload
1339:  checkcast 20 // [Ljava/lang/Object;
1342:  iload_3 // LocalVariable{type=int, simpleName=$sp}
1343:  iconst_0
1344:  iadd
1345:  aaload
1346:  checkcast 65 // java/lang/String
1349:  invokevirtual 68 // symbol (Ljava/lang/String;)Ljava/lang/String;
1352:  aastore
1353:  aload 8 // LocalVariable{type=int[], simpleName=$typeStack}
1355:  iload_3 // LocalVariable{type=int, simpleName=$sp}
1356:  bipush 12
1358:  iastore
1359:  ret // LocalVariable{type=ReturnAddress, simpleName=$subroutineReturnAddressName}
[Rule 3subroutine]:
1361:  astore 12 // LocalVariable{type=ReturnAddress, simpleName=$subroutineReturnAddressName}
1363:  iinc 3 -2 // $sp+=-2
1366:  aload 9 // LocalVariable{type=java.lang.Object[], simpleName=$valueStack}
1368:  bipush 12
1370:  aaload
1371:  checkcast 20 // [Ljava/lang/Object;
1374:  iload_3 // LocalVariable{type=int, simpleName=$sp}
1375:  aload_0 // LocalVariable{type=org.vesalainen.bcc.ClassFile$ClassType@6438804f, simpleName=this}
1376:  aload 9 // LocalVariable{type=java.lang.Object[], simpleName=$valueStack}
1378:  bipush 12
1380:  aaload
1381:  checkcast 20 // [Ljava/lang/Object;
1384:  iload_3 // LocalVariable{type=int, simpleName=$sp}
1385:  iconst_0
1386:  iadd
1387:  aaload
1388:  checkcast 70 // javax/lang/model/type/TypeMirror
1391:  invokevirtual 74 // plainPlus (Ljavax/lang/model/type/TypeMirror;)Ljavax/lang/model/type/TypeMirror;
1394:  aastore
1395:  aload 8 // LocalVariable{type=int[], simpleName=$typeStack}
1397:  iload_3 // LocalVariable{type=int, simpleName=$sp}
1398:  bipush 12
1400:  iastore
1401:  ret // LocalVariable{type=ReturnAddress, simpleName=$subroutineReturnAddressName}
[expression-goto]:
1403:  aload 7 // LocalVariable{type=int[], simpleName=$stateStack}
1405:  iload_3 // LocalVariable{type=int, simpleName=$sp}
1406:  iaload
1407:  dup
1408:  iconst_1
1409:  if_icmpne 1416 //[branch24]
1412:  pop
1413:  goto  1673 //[State 4-goto-action]
[branch24]:
1416:  dup
1417:  iconst_2
1418:  if_icmpne 1425 //[branch25]
1421:  pop
1422:  goto  1684 //[State 6-goto-action]
[branch25]:
1425:  dup
1426:  iconst_3
1427:  if_icmpne 1434 //[branch26]
1430:  pop
1431:  goto  1696 //[State 8-goto-action]
[branch26]:
1434:  dup
1435:  bipush 9
1437:  if_icmpne 1444 //[branch27]
1440:  pop
1441:  goto  1708 //[State 11-goto-action]
[branch27]:
1444:  dup
1445:  bipush 10
1447:  if_icmpne 1454 //[branch28]
1450:  pop
1451:  goto  1720 //[State 12-goto-action]
[branch28]:
1454:  pop
1455:  goto  1458 //[branch23]
[branch23]:
1458:  new 22 // org/vesalainen/bcc/SwitchException
1461:  dup
1462:  invokespecial 23 // <init> ()V
1465:  athrow
[Rule 2subroutine]:
1466:  astore 12 // LocalVariable{type=ReturnAddress, simpleName=$subroutineReturnAddressName}
1468:  iinc 3 -2 // $sp+=-2
1471:  aload 9 // LocalVariable{type=java.lang.Object[], simpleName=$valueStack}
1473:  bipush 12
1475:  aaload
1476:  checkcast 20 // [Ljava/lang/Object;
1479:  iload_3 // LocalVariable{type=int, simpleName=$sp}
1480:  aload_0 // LocalVariable{type=org.vesalainen.bcc.ClassFile$ClassType@6438804f, simpleName=this}
1481:  aload 9 // LocalVariable{type=java.lang.Object[], simpleName=$valueStack}
1483:  bipush 12
1485:  aaload
1486:  checkcast 20 // [Ljava/lang/Object;
1489:  iload_3 // LocalVariable{type=int, simpleName=$sp}
1490:  iconst_0
1491:  iadd
1492:  aaload
1493:  checkcast 70 // javax/lang/model/type/TypeMirror
1496:  invokevirtual 77 // plainOpt (Ljavax/lang/model/type/TypeMirror;)Ljavax/lang/model/type/TypeMirror;
1499:  aastore
1500:  aload 8 // LocalVariable{type=int[], simpleName=$typeStack}
1502:  iload_3 // LocalVariable{type=int, simpleName=$sp}
1503:  bipush 12
1505:  iastore
1506:  ret // LocalVariable{type=ReturnAddress, simpleName=$subroutineReturnAddressName}
[Rule 1subroutine]:
1508:  astore 12 // LocalVariable{type=ReturnAddress, simpleName=$subroutineReturnAddressName}
1510:  iinc 3 -2 // $sp+=-2
1513:  aload 9 // LocalVariable{type=java.lang.Object[], simpleName=$valueStack}
1515:  bipush 12
1517:  aaload
1518:  checkcast 20 // [Ljava/lang/Object;
1521:  iload_3 // LocalVariable{type=int, simpleName=$sp}
1522:  aload_0 // LocalVariable{type=org.vesalainen.bcc.ClassFile$ClassType@6438804f, simpleName=this}
1523:  aload 9 // LocalVariable{type=java.lang.Object[], simpleName=$valueStack}
1525:  bipush 12
1527:  aaload
1528:  checkcast 20 // [Ljava/lang/Object;
1531:  iload_3 // LocalVariable{type=int, simpleName=$sp}
1532:  iconst_0
1533:  iadd
1534:  aaload
1535:  checkcast 70 // javax/lang/model/type/TypeMirror
1538:  invokevirtual 80 // plainStar (Ljavax/lang/model/type/TypeMirror;)Ljavax/lang/model/type/TypeMirror;
1541:  aastore
1542:  aload 8 // LocalVariable{type=int[], simpleName=$typeStack}
1544:  iload_3 // LocalVariable{type=int, simpleName=$sp}
1545:  bipush 12
1547:  iastore
1548:  ret // LocalVariable{type=ReturnAddress, simpleName=$subroutineReturnAddressName}
[Eof reduce Rule 0-action, Rule 0]:
1550:  jsr 1732 //[Rule 0subroutine]
1553:  goto  2053 //[State 12syntaxError, State 11syntaxError, State 10syntaxError, State 9syntaxError, State 8syntaxError, State 7syntaxError, State 6syntaxError, State 5syntaxError, State 4syntaxError, State 3syntaxError, State 2syntaxError, State 1syntaxError, syntaxError]
[Rule 6subroutine]:
1556:  astore 12 // LocalVariable{type=ReturnAddress, simpleName=$subroutineReturnAddressName}
1558:  iinc 3 -3 // $sp+=-3
1561:  aload 9 // LocalVariable{type=java.lang.Object[], simpleName=$valueStack}
1563:  bipush 12
1565:  aaload
1566:  checkcast 20 // [Ljava/lang/Object;
1569:  iload_3 // LocalVariable{type=int, simpleName=$sp}
1570:  aload_0 // LocalVariable{type=org.vesalainen.bcc.ClassFile$ClassType@6438804f, simpleName=this}
1571:  aload 9 // LocalVariable{type=java.lang.Object[], simpleName=$valueStack}
1573:  bipush 12
1575:  aaload
1576:  checkcast 20 // [Ljava/lang/Object;
1579:  iload_3 // LocalVariable{type=int, simpleName=$sp}
1580:  iconst_1
1581:  iadd
1582:  aaload
1583:  checkcast 82 // java/util/List
1586:  invokevirtual 86 // plainChoise (Ljava/util/List;)Ljavax/lang/model/type/TypeMirror;
1589:  aastore
1590:  aload 8 // LocalVariable{type=int[], simpleName=$typeStack}
1592:  iload_3 // LocalVariable{type=int, simpleName=$sp}
1593:  bipush 12
1595:  iastore
1596:  ret // LocalVariable{type=ReturnAddress, simpleName=$subroutineReturnAddressName}
[pipe reduce Rule 11-action, '}' reduce Rule 11-action, Rule 11]:
1598:  jsr 1751 //[Rule 11subroutine]
1601:  goto  1793 //[choiseList-goto]
[Rule 4subroutine]:
1604:  astore 12 // LocalVariable{type=ReturnAddress, simpleName=$subroutineReturnAddressName}
1606:  iinc 3 -3 // $sp+=-3
1609:  aload 9 // LocalVariable{type=java.lang.Object[], simpleName=$valueStack}
1611:  bipush 12
1613:  aaload
1614:  checkcast 20 // [Ljava/lang/Object;
1617:  iload_3 // LocalVariable{type=int, simpleName=$sp}
1618:  aload_0 // LocalVariable{type=org.vesalainen.bcc.ClassFile$ClassType@6438804f, simpleName=this}
1619:  aload 9 // LocalVariable{type=java.lang.Object[], simpleName=$valueStack}
1621:  bipush 12
1623:  aaload
1624:  checkcast 20 // [Ljava/lang/Object;
1627:  iload_3 // LocalVariable{type=int, simpleName=$sp}
1628:  iconst_1
1629:  iadd
1630:  aaload
1631:  checkcast 82 // java/util/List
1634:  invokevirtual 89 // plainSeq (Ljava/util/List;)Ljavax/lang/model/type/TypeMirror;
1637:  aastore
1638:  aload 8 // LocalVariable{type=int[], simpleName=$typeStack}
1640:  iload_3 // LocalVariable{type=int, simpleName=$sp}
1641:  bipush 12
1643:  iastore
1644:  ret // LocalVariable{type=ReturnAddress, simpleName=$subroutineReturnAddressName}
[comma reduce Rule 8-action, '}' reduce Rule 8-action, Rule 8]:
1646:  jsr 1812 //[Rule 8subroutine]
1649:  goto  1854 //[seqList-goto]
[pipe reduce Rule 12-action, '}' reduce Rule 12-action, Rule 12]:
1652:  jsr 1873 //[Rule 12subroutine]
1655:  goto  1793 //[choiseList-goto]
[comma reduce Rule 7-action, '}' reduce Rule 7-action, Rule 7]:
1658:  jsr 1930 //[Rule 7subroutine]
1661:  goto  1854 //[seqList-goto]
[Rule 5-goto-action]:
1664:  iinc 3 1 // $sp+=1
1667:  jsr 1987 //[Rule 5subroutine]
1670:  goto  1403 //[expression-goto]
[State 4-goto-action]:
1673:  iinc 3 1 // $sp+=1
1676:  aload 7 // LocalVariable{type=int[], simpleName=$stateStack}
1678:  iload_3 // LocalVariable{type=int, simpleName=$sp}
1679:  iconst_4
1680:  iastore
1681:  goto  58 //[start]
[State 6-goto-action]:
1684:  iinc 3 1 // $sp+=1
1687:  aload 7 // LocalVariable{type=int[], simpleName=$stateStack}
1689:  iload_3 // LocalVariable{type=int, simpleName=$sp}
1690:  bipush 6
1692:  iastore
1693:  goto  58 //[start]
[State 8-goto-action]:
1696:  iinc 3 1 // $sp+=1
1699:  aload 7 // LocalVariable{type=int[], simpleName=$stateStack}
1701:  iload_3 // LocalVariable{type=int, simpleName=$sp}
1702:  bipush 8
1704:  iastore
1705:  goto  58 //[start]
[State 11-goto-action]:
1708:  iinc 3 1 // $sp+=1
1711:  aload 7 // LocalVariable{type=int[], simpleName=$stateStack}
1713:  iload_3 // LocalVariable{type=int, simpleName=$sp}
1714:  bipush 11
1716:  iastore
1717:  goto  58 //[start]
[State 12-goto-action]:
1720:  iinc 3 1 // $sp+=1
1723:  aload 7 // LocalVariable{type=int[], simpleName=$stateStack}
1725:  iload_3 // LocalVariable{type=int, simpleName=$sp}
1726:  bipush 12
1728:  iastore
1729:  goto  58 //[start]
[Rule 0subroutine]:
1732:  astore 12 // LocalVariable{type=ReturnAddress, simpleName=$subroutineReturnAddressName}
1734:  iinc 3 -1 // $sp+=-1
1737:  aload 9 // LocalVariable{type=java.lang.Object[], simpleName=$valueStack}
1739:  bipush 12
1741:  aaload
1742:  checkcast 20 // [Ljava/lang/Object;
1745:  iconst_0
1746:  aaload
1747:  checkcast 70 // javax/lang/model/type/TypeMirror
1750:  areturn
[Rule 11subroutine]:
1751:  astore 12 // LocalVariable{type=ReturnAddress, simpleName=$subroutineReturnAddressName}
1753:  iinc 3 -1 // $sp+=-1
1756:  aload 9 // LocalVariable{type=java.lang.Object[], simpleName=$valueStack}
1758:  bipush 12
1760:  aaload
1761:  checkcast 20 // [Ljava/lang/Object;
1764:  iload_3 // LocalVariable{type=int, simpleName=$sp}
1765:  aload_0 // LocalVariable{type=org.vesalainen.bcc.ClassFile$ClassType@6438804f, simpleName=this}
1766:  aload 9 // LocalVariable{type=java.lang.Object[], simpleName=$valueStack}
1768:  bipush 12
1770:  aaload
1771:  checkcast 20 // [Ljava/lang/Object;
1774:  iload_3 // LocalVariable{type=int, simpleName=$sp}
1775:  iconst_0
1776:  iadd
1777:  aaload
1778:  checkcast 70 // javax/lang/model/type/TypeMirror
1781:  invokevirtual 93 // choiseList (Ljavax/lang/model/type/TypeMirror;)Ljava/util/List;
1784:  aastore
1785:  aload 8 // LocalVariable{type=int[], simpleName=$typeStack}
1787:  iload_3 // LocalVariable{type=int, simpleName=$sp}
1788:  bipush 12
1790:  iastore
1791:  ret // LocalVariable{type=ReturnAddress, simpleName=$subroutineReturnAddressName}
[choiseList-goto]:
1793:  aload 7 // LocalVariable{type=int[], simpleName=$stateStack}
1795:  iload_3 // LocalVariable{type=int, simpleName=$sp}
1796:  iaload
1797:  iconst_2
1798:  if_icmpeq 2030 //[State 5-goto-action]
1801:  goto  1804 //[branch29]
[branch29]:
1804:  new 22 // org/vesalainen/bcc/SwitchException
1807:  dup
1808:  invokespecial 23 // <init> ()V
1811:  athrow
[Rule 8subroutine]:
1812:  astore 12 // LocalVariable{type=ReturnAddress, simpleName=$subroutineReturnAddressName}
1814:  iinc 3 -1 // $sp+=-1
1817:  aload 9 // LocalVariable{type=java.lang.Object[], simpleName=$valueStack}
1819:  bipush 12
1821:  aaload
1822:  checkcast 20 // [Ljava/lang/Object;
1825:  iload_3 // LocalVariable{type=int, simpleName=$sp}
1826:  aload_0 // LocalVariable{type=org.vesalainen.bcc.ClassFile$ClassType@6438804f, simpleName=this}
1827:  aload 9 // LocalVariable{type=java.lang.Object[], simpleName=$valueStack}
1829:  bipush 12
1831:  aaload
1832:  checkcast 20 // [Ljava/lang/Object;
1835:  iload_3 // LocalVariable{type=int, simpleName=$sp}
1836:  iconst_0
1837:  iadd
1838:  aaload
1839:  checkcast 70 // javax/lang/model/type/TypeMirror
1842:  invokevirtual 96 // seqList (Ljavax/lang/model/type/TypeMirror;)Ljava/util/List;
1845:  aastore
1846:  aload 8 // LocalVariable{type=int[], simpleName=$typeStack}
1848:  iload_3 // LocalVariable{type=int, simpleName=$sp}
1849:  bipush 12
1851:  iastore
1852:  ret // LocalVariable{type=ReturnAddress, simpleName=$subroutineReturnAddressName}
[seqList-goto]:
1854:  aload 7 // LocalVariable{type=int[], simpleName=$stateStack}
1856:  iload_3 // LocalVariable{type=int, simpleName=$sp}
1857:  iaload
1858:  iconst_3
1859:  if_icmpeq 2041 //[State 7-goto-action]
1862:  goto  1865 //[branch30]
[branch30]:
1865:  new 22 // org/vesalainen/bcc/SwitchException
1868:  dup
1869:  invokespecial 23 // <init> ()V
1872:  athrow
[Rule 12subroutine]:
1873:  astore 12 // LocalVariable{type=ReturnAddress, simpleName=$subroutineReturnAddressName}
1875:  iinc 3 -3 // $sp+=-3
1878:  aload 9 // LocalVariable{type=java.lang.Object[], simpleName=$valueStack}
1880:  bipush 12
1882:  aaload
1883:  checkcast 20 // [Ljava/lang/Object;
1886:  iload_3 // LocalVariable{type=int, simpleName=$sp}
1887:  aload_0 // LocalVariable{type=org.vesalainen.bcc.ClassFile$ClassType@6438804f, simpleName=this}
1888:  aload 9 // LocalVariable{type=java.lang.Object[], simpleName=$valueStack}
1890:  bipush 12
1892:  aaload
1893:  checkcast 20 // [Ljava/lang/Object;
1896:  iload_3 // LocalVariable{type=int, simpleName=$sp}
1897:  iconst_0
1898:  iadd
1899:  aaload
1900:  checkcast 82 // java/util/List
1903:  aload 9 // LocalVariable{type=java.lang.Object[], simpleName=$valueStack}
1905:  bipush 12
1907:  aaload
1908:  checkcast 20 // [Ljava/lang/Object;
1911:  iload_3 // LocalVariable{type=int, simpleName=$sp}
1912:  iconst_2
1913:  iadd
1914:  aaload
1915:  checkcast 70 // javax/lang/model/type/TypeMirror
1918:  invokevirtual 99 // choiseList (Ljava/util/List;Ljavax/lang/model/type/TypeMirror;)Ljava/util/List;
1921:  aastore
1922:  aload 8 // LocalVariable{type=int[], simpleName=$typeStack}
1924:  iload_3 // LocalVariable{type=int, simpleName=$sp}
1925:  bipush 12
1927:  iastore
1928:  ret // LocalVariable{type=ReturnAddress, simpleName=$subroutineReturnAddressName}
[Rule 7subroutine]:
1930:  astore 12 // LocalVariable{type=ReturnAddress, simpleName=$subroutineReturnAddressName}
1932:  iinc 3 -3 // $sp+=-3
1935:  aload 9 // LocalVariable{type=java.lang.Object[], simpleName=$valueStack}
1937:  bipush 12
1939:  aaload
1940:  checkcast 20 // [Ljava/lang/Object;
1943:  iload_3 // LocalVariable{type=int, simpleName=$sp}
1944:  aload_0 // LocalVariable{type=org.vesalainen.bcc.ClassFile$ClassType@6438804f, simpleName=this}
1945:  aload 9 // LocalVariable{type=java.lang.Object[], simpleName=$valueStack}
1947:  bipush 12
1949:  aaload
1950:  checkcast 20 // [Ljava/lang/Object;
1953:  iload_3 // LocalVariable{type=int, simpleName=$sp}
1954:  iconst_0
1955:  iadd
1956:  aaload
1957:  checkcast 82 // java/util/List
1960:  aload 9 // LocalVariable{type=java.lang.Object[], simpleName=$valueStack}
1962:  bipush 12
1964:  aaload
1965:  checkcast 20 // [Ljava/lang/Object;
1968:  iload_3 // LocalVariable{type=int, simpleName=$sp}
1969:  iconst_2
1970:  iadd
1971:  aaload
1972:  checkcast 70 // javax/lang/model/type/TypeMirror
1975:  invokevirtual 101 // seqList (Ljava/util/List;Ljavax/lang/model/type/TypeMirror;)Ljava/util/List;
1978:  aastore
1979:  aload 8 // LocalVariable{type=int[], simpleName=$typeStack}
1981:  iload_3 // LocalVariable{type=int, simpleName=$sp}
1982:  bipush 12
1984:  iastore
1985:  ret // LocalVariable{type=ReturnAddress, simpleName=$subroutineReturnAddressName}
[Rule 5subroutine]:
1987:  astore 12 // LocalVariable{type=ReturnAddress, simpleName=$subroutineReturnAddressName}
1989:  iinc 3 -1 // $sp+=-1
1992:  aload 9 // LocalVariable{type=java.lang.Object[], simpleName=$valueStack}
1994:  bipush 12
1996:  aaload
1997:  checkcast 20 // [Ljava/lang/Object;
2000:  iload_3 // LocalVariable{type=int, simpleName=$sp}
2001:  aload_0 // LocalVariable{type=org.vesalainen.bcc.ClassFile$ClassType@6438804f, simpleName=this}
2002:  aload 9 // LocalVariable{type=java.lang.Object[], simpleName=$valueStack}
2004:  bipush 12
2006:  aaload
2007:  checkcast 20 // [Ljava/lang/Object;
2010:  iload_3 // LocalVariable{type=int, simpleName=$sp}
2011:  iconst_0
2012:  iadd
2013:  aaload
2014:  checkcast 65 // java/lang/String
2017:  aload_2 // ElementImpl{name=GRAMMAR}
2018:  invokevirtual 105 // plainSymbol (Ljava/lang/String;Lorg/vesalainen/grammar/Grammar;)Ljavax/lang/model/type/TypeMirror;
2021:  aastore
2022:  aload 8 // LocalVariable{type=int[], simpleName=$typeStack}
2024:  iload_3 // LocalVariable{type=int, simpleName=$sp}
2025:  bipush 12
2027:  iastore
2028:  ret // LocalVariable{type=ReturnAddress, simpleName=$subroutineReturnAddressName}
[State 5-goto-action]:
2030:  iinc 3 1 // $sp+=1
2033:  aload 7 // LocalVariable{type=int[], simpleName=$stateStack}
2035:  iload_3 // LocalVariable{type=int, simpleName=$sp}
2036:  iconst_5
2037:  iastore
2038:  goto  58 //[start]
[State 7-goto-action]:
2041:  iinc 3 1 // $sp+=1
2044:  aload 7 // LocalVariable{type=int[], simpleName=$stateStack}
2046:  iload_3 // LocalVariable{type=int, simpleName=$sp}
2047:  bipush 7
2049:  iastore
2050:  goto  58 //[start]
[State 12syntaxError, State 11syntaxError, State 10syntaxError, State 9syntaxError, State 8syntaxError, State 7syntaxError, State 6syntaxError, State 5syntaxError, State 4syntaxError, State 3syntaxError, State 2syntaxError, State 1syntaxError, syntaxError]:
2053:  aload_1 // ElementImpl{name=$inputReader}
2054:  invokevirtual 108 // throwSyntaxErrorException ()V
2057:  goto  38 //[reset]
[syntaxErrorExceptionHandler]:
2060:  athrow
[exceptionHandler]:
2061:  astore 11 // LocalVariable{type=java.lang.Throwable, simpleName=$throwable}
2063:  aload_1 // ElementImpl{name=$inputReader}
2064:  aload 11 // LocalVariable{type=java.lang.Throwable, simpleName=$throwable}
2066:  invokevirtual 111 // throwSyntaxErrorException (Ljava/lang/Throwable;)V
2069:  goto  38 //[reset]
parseIt(Ljava/lang/String;Lorg/vesalainen/grammar/Grammar;)Ljavax/lang/model/type/TypeMirror;
0:  aload_0 // LocalVariable{type=org.vesalainen.bcc.ClassFile$ClassType@6438804f, simpleName=this}
1:  new 48 // org/vesalainen/parser/util/InputReader
4:  dup
5:  aload_1 // text
6:  invokespecial 132 // <init> (Ljava/lang/CharSequence;)V
9:  aload_2 // g
10:  invokevirtual 134 // $parseExpression (Lorg/vesalainen/parser/util/InputReader;Lorg/vesalainen/grammar/Grammar;)Ljavax/lang/model/type/TypeMirror;
13:  areturn
$input5(Lorg/vesalainen/parser/util/InputReader;)I
[start]:
0:  iconst_m1
1:  istore_2 // LocalVariable{type=int, simpleName=cc}
2:  iconst_m1
3:  istore_3 // LocalVariable{type=int, simpleName=accepted}
[S0]:
4:  iconst_m1
5:  istore_3 // LocalVariable{type=int, simpleName=accepted}
6:  aload_1 // ElementImpl{name=reader}
7:  invokevirtual 140 // read ()I
10:  istore_2 // LocalVariable{type=int, simpleName=cc}
11:  iload_2 // LocalVariable{type=int, simpleName=cc}
12:  iflt 69 //[eof]
15:  iload_2 // LocalVariable{type=int, simpleName=cc}
16:  dup
17:  bipush 44
19:  if_icmpne 26 //[branch1]
22:  pop
23:  goto  40 //[S0-,>S(1), S(1)]
[branch1]:
26:  dup
27:  bipush 125
29:  if_icmpne 36 //[branch2]
32:  pop
33:  goto  46 //[S0-}>S(2), S(2)]
[branch2]:
36:  pop
37:  goto  52 //[error]
[S0-,>S(1), S(1)]:
40:  bipush 9
42:  istore_3 // LocalVariable{type=int, simpleName=accepted}
43:  goto  67 //[exit]
[S0-}>S(2), S(2)]:
46:  bipush 15
48:  istore_3 // LocalVariable{type=int, simpleName=accepted}
49:  goto  67 //[exit]
[error]:
52:  iload_3 // LocalVariable{type=int, simpleName=accepted}
53:  iconst_m1
54:  if_icmpne 59 //[pushback]
57:  iload_3 // LocalVariable{type=int, simpleName=accepted}
58:  ireturn
[pushback]:
59:  aload_1 // ElementImpl{name=reader}
60:  iload_2 // LocalVariable{type=int, simpleName=cc}
61:  invokevirtual 144 // unread (I)V
64:  goto  67 //[exit]
[exit]:
67:  iload_3 // LocalVariable{type=int, simpleName=accepted}
68:  ireturn
[eof]:
69:  iload_3 // LocalVariable{type=int, simpleName=accepted}
70:  iconst_m1
71:  if_icmpne 76 //[eofacc]
74:  iconst_0
75:  ireturn
[eofacc]:
76:  iload_3 // LocalVariable{type=int, simpleName=accepted}
77:  ireturn
$input2(Lorg/vesalainen/parser/util/InputReader;)I
[start]:
0:  iconst_m1
1:  istore_2 // LocalVariable{type=int, simpleName=cc}
2:  iconst_m1
3:  istore_3 // LocalVariable{type=int, simpleName=accepted}
[S0]:
4:  iconst_m1
5:  istore_3 // LocalVariable{type=int, simpleName=accepted}
6:  aload_1 // ElementImpl{name=reader}
7:  invokevirtual 140 // read ()I
10:  istore_2 // LocalVariable{type=int, simpleName=cc}
11:  iload_2 // LocalVariable{type=int, simpleName=cc}
12:  iflt 85 //[eof]
15:  iload_2 // LocalVariable{type=int, simpleName=cc}
16:  dup
17:  ldc 149
19:  if_icmpne 26 //[branch1]
22:  pop
23:  goto  50 //[S0-¿>S(1), S(1)]
[branch1]:
26:  dup
27:  ldc 150
29:  if_icmpne 36 //[branch2]
32:  pop
33:  goto  56 //[S0-0x2295>S(2), S(2)]
[branch2]:
36:  dup
37:  ldc 151
39:  if_icmpne 46 //[branch3]
42:  pop
43:  goto  62 //[S0-0x229b>S(3), S(3)]
[branch3]:
46:  pop
47:  goto  68 //[error]
[S0-¿>S(1), S(1)]:
50:  bipush 13
52:  istore_3 // LocalVariable{type=int, simpleName=accepted}
53:  goto  83 //[exit]
[S0-0x2295>S(2), S(2)]:
56:  bipush 12
58:  istore_3 // LocalVariable{type=int, simpleName=accepted}
59:  goto  83 //[exit]
[S0-0x229b>S(3), S(3)]:
62:  bipush 11
64:  istore_3 // LocalVariable{type=int, simpleName=accepted}
65:  goto  83 //[exit]
[error]:
68:  iload_3 // LocalVariable{type=int, simpleName=accepted}
69:  iconst_m1
70:  if_icmpne 75 //[pushback]
73:  iload_3 // LocalVariable{type=int, simpleName=accepted}
74:  ireturn
[pushback]:
75:  aload_1 // ElementImpl{name=reader}
76:  iload_2 // LocalVariable{type=int, simpleName=cc}
77:  invokevirtual 144 // unread (I)V
80:  goto  83 //[exit]
[exit]:
83:  iload_3 // LocalVariable{type=int, simpleName=accepted}
84:  ireturn
[eof]:
85:  iload_3 // LocalVariable{type=int, simpleName=accepted}
86:  iconst_m1
87:  if_icmpne 92 //[eofacc]
90:  iconst_0
91:  ireturn
[eofacc]:
92:  iload_3 // LocalVariable{type=int, simpleName=accepted}
93:  ireturn
$input1(Lorg/vesalainen/parser/util/InputReader;)I
[start]:
0:  iconst_m1
1:  istore_2 // LocalVariable{type=int, simpleName=cc}
2:  iconst_m1
3:  istore_3 // LocalVariable{type=int, simpleName=accepted}
[S0]:
4:  iconst_m1
5:  istore_3 // LocalVariable{type=int, simpleName=accepted}
6:  aload_1 // ElementImpl{name=reader}
7:  invokevirtual 140 // read ()I
10:  istore_2 // LocalVariable{type=int, simpleName=cc}
11:  iload_2 // LocalVariable{type=int, simpleName=cc}
12:  iflt 711 //[eof]
15:  iload_2 // LocalVariable{type=int, simpleName=cc}
16:  bipush 45
18:  if_icmplt 30 //[S0--->>S(1)]
21:  iload_2 // LocalVariable{type=int, simpleName=cc}
22:  bipush 63
24:  if_icmpge 30 //[S0--->>S(1)]
27:  goto  156 //[S(1)]
[S0--->>S(1)]:
30:  iload_2 // LocalVariable{type=int, simpleName=cc}
31:  bipush 97 //'a'
33:  if_icmplt 45 //[S0-a-{>S(1)]
36:  iload_2 // LocalVariable{type=int, simpleName=cc}
37:  bipush 124
39:  if_icmpge 45 //[S0-a-{>S(1)]
42:  goto  156 //[S(1)]
[S0-a-{>S(1)]:
45:  iload_2 // LocalVariable{type=int, simpleName=cc}
46:  ldc 152
48:  if_icmpne 54 //[S0-0x3d5>S5]
51:  goto  668 //[S5]
[S0-0x3d5>S5]:
54:  iload_2 // LocalVariable{type=int, simpleName=cc}
55:  bipush 39
57:  if_icmpne 63 //[S0-'>S2]
60:  goto  390 //[S2]
[S0-'>S2]:
63:  iload_2 // LocalVariable{type=int, simpleName=cc}
64:  bipush 33
66:  if_icmplt 78 //[S0-!-&>S(1)]
69:  iload_2 // LocalVariable{type=int, simpleName=cc}
70:  bipush 39
72:  if_icmpge 78 //[S0-!-&>S(1)]
75:  goto  156 //[S(1)]
[S0-!-&>S(1)]:
78:  iload_2 // LocalVariable{type=int, simpleName=cc}
79:  ldc 153
81:  if_icmplt 93 //[S0-Ø-ö>S(1)]
84:  iload_2 // LocalVariable{type=int, simpleName=cc}
85:  ldc 154
87:  if_icmpge 93 //[S0-Ø-ö>S(1)]
90:  goto  156 //[S(1)]
[S0-Ø-ö>S(1)]:
93:  iload_2 // LocalVariable{type=int, simpleName=cc}
94:  ldc 155
96:  if_icmplt 108 //[S0-À-Ö>S(1)]
99:  iload_2 // LocalVariable{type=int, simpleName=cc}
100:  ldc 156
102:  if_icmpge 108 //[S0-À-Ö>S(1)]
105:  goto  156 //[S(1)]
[S0-À-Ö>S(1)]:
108:  iload_2 // LocalVariable{type=int, simpleName=cc}
109:  bipush 126
111:  if_icmplt 123 //[S0-~->S(1)]
114:  iload_2 // LocalVariable{type=int, simpleName=cc}
115:  ldc 157
117:  if_icmpge 123 //[S0-~->S(1)]
120:  goto  156 //[S(1)]
[S0-~->S(1)]:
123:  iload_2 // LocalVariable{type=int, simpleName=cc}
124:  bipush 64
126:  if_icmplt 138 //[S0-@-_>S(1)]
129:  iload_2 // LocalVariable{type=int, simpleName=cc}
130:  bipush 96
132:  if_icmpge 138 //[S0-@-_>S(1)]
135:  goto  156 //[S(1)]
[S0-@-_>S(1)]:
138:  iload_2 // LocalVariable{type=int, simpleName=cc}
139:  ldc 158
141:  if_icmpne 147 //[S0-0x3a3>S4]
144:  goto  642 //[S4]
[S0-0x3a3>S4]:
147:  iload_2 // LocalVariable{type=int, simpleName=cc}
148:  bipush 96
150:  if_icmpne 694 //[error]
153:  goto  516 //[S3]
[S(1)]:
156:  bipush 7
158:  istore_3 // LocalVariable{type=int, simpleName=accepted}
159:  aload_1 // ElementImpl{name=reader}
160:  invokevirtual 140 // read ()I
163:  istore_2 // LocalVariable{type=int, simpleName=cc}
164:  iload_2 // LocalVariable{type=int, simpleName=cc}
165:  iflt 711 //[eof]
168:  iload_2 // LocalVariable{type=int, simpleName=cc}
169:  bipush 45
171:  if_icmplt 183 //[S(1)--->>S(6)]
174:  iload_2 // LocalVariable{type=int, simpleName=cc}
175:  bipush 63
177:  if_icmpge 183 //[S(1)--->>S(6)]
180:  goto  273 //[S(6)]
[S(1)--->>S(6)]:
183:  iload_2 // LocalVariable{type=int, simpleName=cc}
184:  bipush 97 //'a'
186:  if_icmplt 198 //[S(1)-a-{>S(6)]
189:  iload_2 // LocalVariable{type=int, simpleName=cc}
190:  bipush 124
192:  if_icmpge 198 //[S(1)-a-{>S(6)]
195:  goto  273 //[S(6)]
[S(1)-a-{>S(6)]:
198:  iload_2 // LocalVariable{type=int, simpleName=cc}
199:  bipush 33
201:  if_icmplt 213 //[S(1)-!-&>S(6)]
204:  iload_2 // LocalVariable{type=int, simpleName=cc}
205:  bipush 39
207:  if_icmpge 213 //[S(1)-!-&>S(6)]
210:  goto  273 //[S(6)]
[S(1)-!-&>S(6)]:
213:  iload_2 // LocalVariable{type=int, simpleName=cc}
214:  ldc 153
216:  if_icmplt 228 //[S(1)-Ø-ö>S(6)]
219:  iload_2 // LocalVariable{type=int, simpleName=cc}
220:  ldc 154
222:  if_icmpge 228 //[S(1)-Ø-ö>S(6)]
225:  goto  273 //[S(6)]
[S(1)-Ø-ö>S(6)]:
228:  iload_2 // LocalVariable{type=int, simpleName=cc}
229:  ldc 155
231:  if_icmplt 243 //[S(1)-À-Ö>S(6)]
234:  iload_2 // LocalVariable{type=int, simpleName=cc}
235:  ldc 156
237:  if_icmpge 243 //[S(1)-À-Ö>S(6)]
240:  goto  273 //[S(6)]
[S(1)-À-Ö>S(6)]:
243:  iload_2 // LocalVariable{type=int, simpleName=cc}
244:  bipush 126
246:  if_icmplt 258 //[S(1)-~->S(6)]
249:  iload_2 // LocalVariable{type=int, simpleName=cc}
250:  ldc 157
252:  if_icmpge 258 //[S(1)-~->S(6)]
255:  goto  273 //[S(6)]
[S(1)-~->S(6)]:
258:  iload_2 // LocalVariable{type=int, simpleName=cc}
259:  bipush 64
261:  if_icmplt 694 //[error]
264:  iload_2 // LocalVariable{type=int, simpleName=cc}
265:  bipush 96
267:  if_icmpge 694 //[error]
270:  goto  273 //[S(6)]
[S(6)]:
273:  bipush 7
275:  istore_3 // LocalVariable{type=int, simpleName=accepted}
276:  aload_1 // ElementImpl{name=reader}
277:  invokevirtual 140 // read ()I
280:  istore_2 // LocalVariable{type=int, simpleName=cc}
281:  iload_2 // LocalVariable{type=int, simpleName=cc}
282:  iflt 711 //[eof]
285:  iload_2 // LocalVariable{type=int, simpleName=cc}
286:  bipush 45
288:  if_icmplt 300 //[S(6)--->>S(6)]
291:  iload_2 // LocalVariable{type=int, simpleName=cc}
292:  bipush 63
294:  if_icmpge 300 //[S(6)--->>S(6)]
297:  goto  273 //[S(6)]
[S(6)--->>S(6)]:
300:  iload_2 // LocalVariable{type=int, simpleName=cc}
301:  bipush 97 //'a'
303:  if_icmplt 315 //[S(6)-a-{>S(6)]
306:  iload_2 // LocalVariable{type=int, simpleName=cc}
307:  bipush 124
309:  if_icmpge 315 //[S(6)-a-{>S(6)]
312:  goto  273 //[S(6)]
[S(6)-a-{>S(6)]:
315:  iload_2 // LocalVariable{type=int, simpleName=cc}
316:  bipush 33
318:  if_icmplt 330 //[S(6)-!-&>S(6)]
321:  iload_2 // LocalVariable{type=int, simpleName=cc}
322:  bipush 39
324:  if_icmpge 330 //[S(6)-!-&>S(6)]
327:  goto  273 //[S(6)]
[S(6)-!-&>S(6)]:
330:  iload_2 // LocalVariable{type=int, simpleName=cc}
331:  ldc 153
333:  if_icmplt 345 //[S(6)-Ø-ö>S(6)]
336:  iload_2 // LocalVariable{type=int, simpleName=cc}
337:  ldc 154
339:  if_icmpge 345 //[S(6)-Ø-ö>S(6)]
342:  goto  273 //[S(6)]
[S(6)-Ø-ö>S(6)]:
345:  iload_2 // LocalVariable{type=int, simpleName=cc}
346:  ldc 155
348:  if_icmplt 360 //[S(6)-À-Ö>S(6)]
351:  iload_2 // LocalVariable{type=int, simpleName=cc}
352:  ldc 156
354:  if_icmpge 360 //[S(6)-À-Ö>S(6)]
357:  goto  273 //[S(6)]
[S(6)-À-Ö>S(6)]:
360:  iload_2 // LocalVariable{type=int, simpleName=cc}
361:  bipush 126
363:  if_icmplt 375 //[S(6)-~->S(6)]
366:  iload_2 // LocalVariable{type=int, simpleName=cc}
367:  ldc 157
369:  if_icmpge 375 //[S(6)-~->S(6)]
372:  goto  273 //[S(6)]
[S(6)-~->S(6)]:
375:  iload_2 // LocalVariable{type=int, simpleName=cc}
376:  bipush 64
378:  if_icmplt 694 //[error]
381:  iload_2 // LocalVariable{type=int, simpleName=cc}
382:  bipush 96
384:  if_icmpge 694 //[error]
387:  goto  273 //[S(6)]
[S2]:
390:  iconst_m1
391:  istore_3 // LocalVariable{type=int, simpleName=accepted}
392:  aload_1 // ElementImpl{name=reader}
393:  invokevirtual 140 // read ()I
396:  istore_2 // LocalVariable{type=int, simpleName=cc}
397:  iload_2 // LocalVariable{type=int, simpleName=cc}
398:  iflt 711 //[eof]
401:  iload_2 // LocalVariable{type=int, simpleName=cc}
402:  bipush 40
404:  if_icmplt 410 //[S2-(->S7]
407:  goto  424 //[S7]
[S2-(->S7]:
410:  iload_2 // LocalVariable{type=int, simpleName=cc}
411:  iconst_0
412:  if_icmplt 694 //[error]
415:  iload_2 // LocalVariable{type=int, simpleName=cc}
416:  bipush 39
418:  if_icmpge 694 //[error]
421:  goto  424 //[S7]
[S7]:
424:  iconst_m1
425:  istore_3 // LocalVariable{type=int, simpleName=accepted}
426:  aload_1 // ElementImpl{name=reader}
427:  invokevirtual 140 // read ()I
430:  istore_2 // LocalVariable{type=int, simpleName=cc}
431:  iload_2 // LocalVariable{type=int, simpleName=cc}
432:  iflt 711 //[eof]
435:  iload_2 // LocalVariable{type=int, simpleName=cc}
436:  bipush 39
438:  if_icmpne 444 //[S7-'>S(12)]
441:  goto  510 //[S(12)]
[S7-'>S(12)]:
444:  iload_2 // LocalVariable{type=int, simpleName=cc}
445:  bipush 40
447:  if_icmplt 453 //[S7-(->S11]
450:  goto  467 //[S11]
[S7-(->S11]:
453:  iload_2 // LocalVariable{type=int, simpleName=cc}
454:  iconst_0
455:  if_icmplt 694 //[error]
458:  iload_2 // LocalVariable{type=int, simpleName=cc}
459:  bipush 39
461:  if_icmpge 694 //[error]
464:  goto  467 //[S11]
[S11]:
467:  iconst_m1
468:  istore_3 // LocalVariable{type=int, simpleName=accepted}
469:  aload_1 // ElementImpl{name=reader}
470:  invokevirtual 140 // read ()I
473:  istore_2 // LocalVariable{type=int, simpleName=cc}
474:  iload_2 // LocalVariable{type=int, simpleName=cc}
475:  iflt 711 //[eof]
478:  iload_2 // LocalVariable{type=int, simpleName=cc}
479:  bipush 39
481:  if_icmpne 487 //[S11-'>S(12)]
484:  goto  510 //[S(12)]
[S11-'>S(12)]:
487:  iload_2 // LocalVariable{type=int, simpleName=cc}
488:  bipush 40
490:  if_icmplt 496 //[S11-(->S11]
493:  goto  467 //[S11]
[S11-(->S11]:
496:  iload_2 // LocalVariable{type=int, simpleName=cc}
497:  iconst_0
498:  if_icmplt 694 //[error]
501:  iload_2 // LocalVariable{type=int, simpleName=cc}
502:  bipush 39
504:  if_icmpge 694 //[error]
507:  goto  467 //[S11]
[S(12)]:
510:  bipush 6
512:  istore_3 // LocalVariable{type=int, simpleName=accepted}
513:  goto  709 //[exit]
[S3]:
516:  iconst_m1
517:  istore_3 // LocalVariable{type=int, simpleName=accepted}
518:  aload_1 // ElementImpl{name=reader}
519:  invokevirtual 140 // read ()I
522:  istore_2 // LocalVariable{type=int, simpleName=cc}
523:  iload_2 // LocalVariable{type=int, simpleName=cc}
524:  iflt 711 //[eof]
527:  iload_2 // LocalVariable{type=int, simpleName=cc}
528:  ldc 159
530:  if_icmplt 536 //[S3-µ->S8]
533:  goto  550 //[S8]
[S3-µ->S8]:
536:  iload_2 // LocalVariable{type=int, simpleName=cc}
537:  iconst_0
538:  if_icmplt 694 //[error]
541:  iload_2 // LocalVariable{type=int, simpleName=cc}
542:  ldc 160
544:  if_icmpge 694 //[error]
547:  goto  550 //[S8]
[S8]:
550:  iconst_m1
551:  istore_3 // LocalVariable{type=int, simpleName=accepted}
552:  aload_1 // ElementImpl{name=reader}
553:  invokevirtual 140 // read ()I
556:  istore_2 // LocalVariable{type=int, simpleName=cc}
557:  iload_2 // LocalVariable{type=int, simpleName=cc}
558:  iflt 711 //[eof]
561:  iload_2 // LocalVariable{type=int, simpleName=cc}
562:  ldc 159
564:  if_icmplt 570 //[S8-µ->S13]
567:  goto  593 //[S13]
[S8-µ->S13]:
570:  iload_2 // LocalVariable{type=int, simpleName=cc}
571:  ldc 160
573:  if_icmpne 579 //[S8-´>S(14)]
576:  goto  636 //[S(14)]
[S8-´>S(14)]:
579:  iload_2 // LocalVariable{type=int, simpleName=cc}
580:  iconst_0
581:  if_icmplt 694 //[error]
584:  iload_2 // LocalVariable{type=int, simpleName=cc}
585:  ldc 160
587:  if_icmpge 694 //[error]
590:  goto  593 //[S13]
[S13]:
593:  iconst_m1
594:  istore_3 // LocalVariable{type=int, simpleName=accepted}
595:  aload_1 // ElementImpl{name=reader}
596:  invokevirtual 140 // read ()I
599:  istore_2 // LocalVariable{type=int, simpleName=cc}
600:  iload_2 // LocalVariable{type=int, simpleName=cc}
601:  iflt 711 //[eof]
604:  iload_2 // LocalVariable{type=int, simpleName=cc}
605:  ldc 159
607:  if_icmplt 613 //[S13-µ->S13]
610:  goto  593 //[S13]
[S13-µ->S13]:
613:  iload_2 // LocalVariable{type=int, simpleName=cc}
614:  ldc 160
616:  if_icmpne 622 //[S13-´>S(14)]
619:  goto  636 //[S(14)]
[S13-´>S(14)]:
622:  iload_2 // LocalVariable{type=int, simpleName=cc}
623:  iconst_0
624:  if_icmplt 694 //[error]
627:  iload_2 // LocalVariable{type=int, simpleName=cc}
628:  ldc 160
630:  if_icmpge 694 //[error]
633:  goto  593 //[S13]
[S(14)]:
636:  bipush 6
638:  istore_3 // LocalVariable{type=int, simpleName=accepted}
639:  goto  709 //[exit]
[S4]:
642:  iconst_m1
643:  istore_3 // LocalVariable{type=int, simpleName=accepted}
644:  aload_1 // ElementImpl{name=reader}
645:  invokevirtual 140 // read ()I
648:  istore_2 // LocalVariable{type=int, simpleName=cc}
649:  iload_2 // LocalVariable{type=int, simpleName=cc}
650:  iflt 711 //[eof]
653:  iload_2 // LocalVariable{type=int, simpleName=cc}
654:  bipush 123
656:  if_icmpeq 662 //[S4-{>S(9), S(9)]
659:  goto  694 //[error]
[S4-{>S(9), S(9)]:
662:  bipush 14
664:  istore_3 // LocalVariable{type=int, simpleName=accepted}
665:  goto  709 //[exit]
[S5]:
668:  iconst_m1
669:  istore_3 // LocalVariable{type=int, simpleName=accepted}
670:  aload_1 // ElementImpl{name=reader}
671:  invokevirtual 140 // read ()I
674:  istore_2 // LocalVariable{type=int, simpleName=cc}
675:  iload_2 // LocalVariable{type=int, simpleName=cc}
676:  iflt 711 //[eof]
679:  iload_2 // LocalVariable{type=int, simpleName=cc}
680:  bipush 123
682:  if_icmpeq 688 //[S5-{>S(10), S(10)]
685:  goto  694 //[error]
[S5-{>S(10), S(10)]:
688:  bipush 17
690:  istore_3 // LocalVariable{type=int, simpleName=accepted}
691:  goto  709 //[exit]
[error]:
694:  iload_3 // LocalVariable{type=int, simpleName=accepted}
695:  iconst_m1
696:  if_icmpne 701 //[pushback]
699:  iload_3 // LocalVariable{type=int, simpleName=accepted}
700:  ireturn
[pushback]:
701:  aload_1 // ElementImpl{name=reader}
702:  iload_2 // LocalVariable{type=int, simpleName=cc}
703:  invokevirtual 144 // unread (I)V
706:  goto  709 //[exit]
[exit]:
709:  iload_3 // LocalVariable{type=int, simpleName=accepted}
710:  ireturn
[eof]:
711:  iload_3 // LocalVariable{type=int, simpleName=accepted}
712:  iconst_m1
713:  if_icmpne 718 //[eofacc]
716:  iconst_0
717:  ireturn
[eofacc]:
718:  iload_3 // LocalVariable{type=int, simpleName=accepted}
719:  ireturn
$input4(Lorg/vesalainen/parser/util/InputReader;)I
[start]:
0:  iconst_m1
1:  istore_2 // LocalVariable{type=int, simpleName=cc}
2:  iconst_m1
3:  istore_3 // LocalVariable{type=int, simpleName=accepted}
[S0]:
4:  iconst_m1
5:  istore_3 // LocalVariable{type=int, simpleName=accepted}
6:  aload_1 // ElementImpl{name=reader}
7:  invokevirtual 140 // read ()I
10:  istore_2 // LocalVariable{type=int, simpleName=cc}
11:  iload_2 // LocalVariable{type=int, simpleName=cc}
12:  iflt 115 //[eof]
15:  iload_2 // LocalVariable{type=int, simpleName=cc}
16:  lookupswitch // default -> [error]
   // 124 -> [S0-|>S(1), S(1)]
   // 125 -> [S0-}>S(2), S(2)]
   // 191 -> [S0-¿>S(3), S(3)]
   // 8853 -> [S0-0x2295>S(4), S(4)]
   // 8859 -> [S0-0x229b>S(5), S(5)]
[S0-|>S(1), S(1)]:
68:  bipush 8
70:  istore_3 // LocalVariable{type=int, simpleName=accepted}
71:  goto  113 //[exit]
[S0-}>S(2), S(2)]:
74:  bipush 15
76:  istore_3 // LocalVariable{type=int, simpleName=accepted}
77:  goto  113 //[exit]
[S0-¿>S(3), S(3)]:
80:  bipush 13
82:  istore_3 // LocalVariable{type=int, simpleName=accepted}
83:  goto  113 //[exit]
[S0-0x2295>S(4), S(4)]:
86:  bipush 12
88:  istore_3 // LocalVariable{type=int, simpleName=accepted}
89:  goto  113 //[exit]
[S0-0x229b>S(5), S(5)]:
92:  bipush 11
94:  istore_3 // LocalVariable{type=int, simpleName=accepted}
95:  goto  113 //[exit]
[error]:
98:  iload_3 // LocalVariable{type=int, simpleName=accepted}
99:  iconst_m1
100:  if_icmpne 105 //[pushback]
103:  iload_3 // LocalVariable{type=int, simpleName=accepted}
104:  ireturn
[pushback]:
105:  aload_1 // ElementImpl{name=reader}
106:  iload_2 // LocalVariable{type=int, simpleName=cc}
107:  invokevirtual 144 // unread (I)V
110:  goto  113 //[exit]
[exit]:
113:  iload_3 // LocalVariable{type=int, simpleName=accepted}
114:  ireturn
[eof]:
115:  iload_3 // LocalVariable{type=int, simpleName=accepted}
116:  iconst_m1
117:  if_icmpne 122 //[eofacc]
120:  iconst_0
121:  ireturn
[eofacc]:
122:  iload_3 // LocalVariable{type=int, simpleName=accepted}
123:  ireturn
$input6(Lorg/vesalainen/parser/util/InputReader;)I
[start]:
0:  iconst_m1
1:  istore_2 // LocalVariable{type=int, simpleName=cc}
2:  iconst_m1
3:  istore_3 // LocalVariable{type=int, simpleName=accepted}
[S0]:
4:  iconst_m1
5:  istore_3 // LocalVariable{type=int, simpleName=accepted}
6:  aload_1 // ElementImpl{name=reader}
7:  invokevirtual 140 // read ()I
10:  istore_2 // LocalVariable{type=int, simpleName=cc}
11:  iload_2 // LocalVariable{type=int, simpleName=cc}
12:  iflt 115 //[eof]
15:  iload_2 // LocalVariable{type=int, simpleName=cc}
16:  lookupswitch // default -> [error]
   // 44 -> [S0-,>S(1), S(1)]
   // 125 -> [S0-}>S(2), S(2)]
   // 191 -> [S0-¿>S(3), S(3)]
   // 8853 -> [S0-0x2295>S(4), S(4)]
   // 8859 -> [S0-0x229b>S(5), S(5)]
[S0-,>S(1), S(1)]:
68:  bipush 9
70:  istore_3 // LocalVariable{type=int, simpleName=accepted}
71:  goto  113 //[exit]
[S0-}>S(2), S(2)]:
74:  bipush 15
76:  istore_3 // LocalVariable{type=int, simpleName=accepted}
77:  goto  113 //[exit]
[S0-¿>S(3), S(3)]:
80:  bipush 13
82:  istore_3 // LocalVariable{type=int, simpleName=accepted}
83:  goto  113 //[exit]
[S0-0x2295>S(4), S(4)]:
86:  bipush 12
88:  istore_3 // LocalVariable{type=int, simpleName=accepted}
89:  goto  113 //[exit]
[S0-0x229b>S(5), S(5)]:
92:  bipush 11
94:  istore_3 // LocalVariable{type=int, simpleName=accepted}
95:  goto  113 //[exit]
[error]:
98:  iload_3 // LocalVariable{type=int, simpleName=accepted}
99:  iconst_m1
100:  if_icmpne 105 //[pushback]
103:  iload_3 // LocalVariable{type=int, simpleName=accepted}
104:  ireturn
[pushback]:
105:  aload_1 // ElementImpl{name=reader}
106:  iload_2 // LocalVariable{type=int, simpleName=cc}
107:  invokevirtual 144 // unread (I)V
110:  goto  113 //[exit]
[exit]:
113:  iload_3 // LocalVariable{type=int, simpleName=accepted}
114:  ireturn
[eof]:
115:  iload_3 // LocalVariable{type=int, simpleName=accepted}
116:  iconst_m1
117:  if_icmpne 122 //[eofacc]
120:  iconst_0
121:  ireturn
[eofacc]:
122:  iload_3 // LocalVariable{type=int, simpleName=accepted}
123:  ireturn
$input3(Lorg/vesalainen/parser/util/InputReader;)I
[start]:
0:  iconst_m1
1:  istore_2 // LocalVariable{type=int, simpleName=cc}
2:  iconst_m1
3:  istore_3 // LocalVariable{type=int, simpleName=accepted}
[S0]:
4:  iconst_m1
5:  istore_3 // LocalVariable{type=int, simpleName=accepted}
6:  aload_1 // ElementImpl{name=reader}
7:  invokevirtual 140 // read ()I
10:  istore_2 // LocalVariable{type=int, simpleName=cc}
11:  iload_2 // LocalVariable{type=int, simpleName=cc}
12:  iflt 69 //[eof]
15:  iload_2 // LocalVariable{type=int, simpleName=cc}
16:  tableswitch // default -> [error]
   // 124 -> [S0-|>S(1), S(1)]
   // 125 -> [S0-}>S(2), S(2)]
[S0-|>S(1), S(1)]:
40:  bipush 8
42:  istore_3 // LocalVariable{type=int, simpleName=accepted}
43:  goto  67 //[exit]
[S0-}>S(2), S(2)]:
46:  bipush 15
48:  istore_3 // LocalVariable{type=int, simpleName=accepted}
49:  goto  67 //[exit]
[error]:
52:  iload_3 // LocalVariable{type=int, simpleName=accepted}
53:  iconst_m1
54:  if_icmpne 59 //[pushback]
57:  iload_3 // LocalVariable{type=int, simpleName=accepted}
58:  ireturn
[pushback]:
59:  aload_1 // ElementImpl{name=reader}
60:  iload_2 // LocalVariable{type=int, simpleName=cc}
61:  invokevirtual 144 // unread (I)V
64:  goto  67 //[exit]
[exit]:
67:  iload_3 // LocalVariable{type=int, simpleName=accepted}
68:  ireturn
[eof]:
69:  iload_3 // LocalVariable{type=int, simpleName=accepted}
70:  iconst_m1
71:  if_icmpne 76 //[eofacc]
74:  iconst_0
75:  ireturn
[eofacc]:
76:  iload_3 // LocalVariable{type=int, simpleName=accepted}
77:  ireturn
