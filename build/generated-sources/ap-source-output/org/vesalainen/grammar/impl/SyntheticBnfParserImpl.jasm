<init>()V
0:  aload_0 // LocalVariable{type=org.vesalainen.bcc.ClassFile$ClassType@6b2896d5, simpleName=this}
1:  invokespecial 9 // <init> ()V
4:  return
$parseExpression(Lorg/vesalainen/parser/util/InputReader;)Ljava/lang/String;
0:  bipush 100 //'d'
2:  newarray 10 // int[]
4:  astore 6 // LocalVariable{type=int[], simpleName=$stateStack}
6:  bipush 100 //'d'
8:  newarray 10 // int[]
10:  astore 7 // LocalVariable{type=int[], simpleName=$typeStack}
12:  bipush 20
14:  anewarray 16 // java/lang/Object
17:  checkcast 18 // [Ljava/lang/Object;
20:  astore 8 // LocalVariable{type=java.lang.Object[], simpleName=$valueStack}
22:  aload 8 // LocalVariable{type=java.lang.Object[], simpleName=$valueStack}
24:  bipush 12
26:  bipush 100 //'d'
28:  anewarray 16 // java/lang/Object
31:  aastore
32:  aconst_null
33:  astore 9 // LocalVariable{type=java.lang.Object, simpleName=$curDECLARED}
35:  aconst_null
36:  astore 10 // LocalVariable{type=java.lang.Throwable, simpleName=$throwable}
[reset]:
38:  iconst_m1
39:  istore_3 // LocalVariable{type=int, simpleName=$token}
40:  iconst_m1
41:  istore 4 // LocalVariable{type=int, simpleName=$curTok}
43:  bipush 8
45:  istore 5 // LocalVariable{type=int, simpleName=$curType}
47:  iconst_m1
48:  istore_2 // LocalVariable{type=int, simpleName=$sp}
49:  iinc 2 1 // $sp+=1
52:  aload 6 // LocalVariable{type=int[], simpleName=$stateStack}
54:  iload_2 // LocalVariable{type=int, simpleName=$sp}
55:  iconst_1
56:  iastore
[start]:
57:  iload_3 // LocalVariable{type=int, simpleName=$token}
58:  ifge 64 //[afterShift]
61:  jsr 668 //[shiftSubroutine]
[afterShift]:
64:  jsr 994 //[updateValueStack]
67:  aload 6 // LocalVariable{type=int[], simpleName=$stateStack}
69:  iload_2 // LocalVariable{type=int, simpleName=$sp}
70:  iaload
71:  tableswitch // default -> [branch1]
   // 1 -> [State 1]
   // 2 -> [State 2]
   // 3 -> [State 3]
   // 4 -> [State 4]
   // 5 -> [State 5]
   // 6 -> [State 6]
   // 7 -> [State 7]
   // 8 -> [State 8]
   // 9 -> [State 9]
   // 10 -> [State 10]
   // 11 -> [State 11]
   // 12 -> [State 12]
[branch1]:
132:  new 20 // org/vesalainen/bcc/SwitchException
135:  dup
136:  invokespecial 21 // <init> ()V
139:  athrow
[State 1]:
140:  iload 4 // LocalVariable{type=int, simpleName=$curTok}
142:  lookupswitch // default -> [State 12syntaxError, State 11syntaxError, State 10syntaxError, State 9syntaxError, State 8syntaxError, State 7syntaxError, State 6syntaxError, State 5syntaxError, State 4syntaxError, State 3syntaxError, State 2syntaxError, State 1syntaxError, syntaxError]
   // 6 -> [anonymousTerminal Shift Rule 10-action]
   // 7 -> [symbolName Shift Rule 9-action]
   // 14 -> ['?{' Shift State 2-action]
   // 17 -> ['?{' Shift State 3-action]
[State 2]:
184:  iload 4 // LocalVariable{type=int, simpleName=$curTok}
186:  lookupswitch // default -> [State 12syntaxError, State 11syntaxError, State 10syntaxError, State 9syntaxError, State 8syntaxError, State 7syntaxError, State 6syntaxError, State 5syntaxError, State 4syntaxError, State 3syntaxError, State 2syntaxError, State 1syntaxError, syntaxError]
   // 6 -> [anonymousTerminal Shift Rule 10-action]
   // 7 -> [symbolName Shift Rule 9-action]
   // 14 -> ['?{' Shift State 2-action]
   // 17 -> ['?{' Shift State 3-action]
[State 3]:
228:  iload 4 // LocalVariable{type=int, simpleName=$curTok}
230:  lookupswitch // default -> [State 12syntaxError, State 11syntaxError, State 10syntaxError, State 9syntaxError, State 8syntaxError, State 7syntaxError, State 6syntaxError, State 5syntaxError, State 4syntaxError, State 3syntaxError, State 2syntaxError, State 1syntaxError, syntaxError]
   // 6 -> [anonymousTerminal Shift Rule 10-action]
   // 7 -> [symbolName Shift Rule 9-action]
   // 14 -> ['?{' Shift State 2-action]
   // 17 -> ['?{' Shift State 3-action]
[State 4]:
272:  iload 4 // LocalVariable{type=int, simpleName=$curTok}
274:  dup
275:  iconst_0
276:  if_icmpne 283 //[branch2]
279:  pop
280:  goto  1526 //[Eof reduce Rule 0-action, Rule 0]
[branch2]:
283:  dup
284:  bipush 11
286:  if_icmpne 293 //[branch3]
289:  pop
290:  goto  1129 //['?' Shift Rule 1-action]
[branch3]:
293:  dup
294:  bipush 12
296:  if_icmpne 303 //[branch4]
299:  pop
300:  goto  1107 //['?' Shift Rule 3-action]
[branch4]:
303:  dup
304:  bipush 13
306:  if_icmpne 313 //[branch5]
309:  pop
310:  goto  1118 //['¿' Shift Rule 2-action]
[branch5]:
313:  pop
314:  goto  2028 //[State 12syntaxError, State 11syntaxError, State 10syntaxError, State 9syntaxError, State 8syntaxError, State 7syntaxError, State 6syntaxError, State 5syntaxError, State 4syntaxError, State 3syntaxError, State 2syntaxError, State 1syntaxError, syntaxError]
[State 5]:
317:  iload 4 // LocalVariable{type=int, simpleName=$curTok}
319:  dup
320:  bipush 8
322:  if_icmpne 329 //[branch6]
325:  pop
326:  goto  1140 //[pipe Shift State 9-action]
[branch6]:
329:  dup
330:  bipush 15
332:  if_icmpne 339 //[branch7]
335:  pop
336:  goto  1154 //['}' Shift Rule 6-action]
[branch7]:
339:  pop
340:  goto  2028 //[State 12syntaxError, State 11syntaxError, State 10syntaxError, State 9syntaxError, State 8syntaxError, State 7syntaxError, State 6syntaxError, State 5syntaxError, State 4syntaxError, State 3syntaxError, State 2syntaxError, State 1syntaxError, syntaxError]
[State 6]:
343:  iload 4 // LocalVariable{type=int, simpleName=$curTok}
345:  lookupswitch // default -> [State 12syntaxError, State 11syntaxError, State 10syntaxError, State 9syntaxError, State 8syntaxError, State 7syntaxError, State 6syntaxError, State 5syntaxError, State 4syntaxError, State 3syntaxError, State 2syntaxError, State 1syntaxError, syntaxError]
   // 8 -> [pipe reduce Rule 11-action, '}' reduce Rule 11-action, Rule 11]
   // 11 -> ['?' Shift Rule 1-action]
   // 12 -> ['?' Shift Rule 3-action]
   // 13 -> ['¿' Shift Rule 2-action]
   // 15 -> [pipe reduce Rule 11-action, '}' reduce Rule 11-action, Rule 11]
[State 7]:
396:  iload 4 // LocalVariable{type=int, simpleName=$curTok}
398:  dup
399:  bipush 9
401:  if_icmpne 408 //[branch8]
404:  pop
405:  goto  1165 //[comma Shift State 10-action]
[branch8]:
408:  dup
409:  bipush 15
411:  if_icmpne 418 //[branch9]
414:  pop
415:  goto  1179 //['}' Shift Rule 4-action]
[branch9]:
418:  pop
419:  goto  2028 //[State 12syntaxError, State 11syntaxError, State 10syntaxError, State 9syntaxError, State 8syntaxError, State 7syntaxError, State 6syntaxError, State 5syntaxError, State 4syntaxError, State 3syntaxError, State 2syntaxError, State 1syntaxError, syntaxError]
[State 8]:
422:  iload 4 // LocalVariable{type=int, simpleName=$curTok}
424:  lookupswitch // default -> [State 12syntaxError, State 11syntaxError, State 10syntaxError, State 9syntaxError, State 8syntaxError, State 7syntaxError, State 6syntaxError, State 5syntaxError, State 4syntaxError, State 3syntaxError, State 2syntaxError, State 1syntaxError, syntaxError]
   // 9 -> [comma reduce Rule 8-action, '}' reduce Rule 8-action, Rule 8]
   // 11 -> ['?' Shift Rule 1-action]
   // 12 -> ['?' Shift Rule 3-action]
   // 13 -> ['¿' Shift Rule 2-action]
   // 15 -> [comma reduce Rule 8-action, '}' reduce Rule 8-action, Rule 8]
[State 9]:
476:  iload 4 // LocalVariable{type=int, simpleName=$curTok}
478:  lookupswitch // default -> [State 12syntaxError, State 11syntaxError, State 10syntaxError, State 9syntaxError, State 8syntaxError, State 7syntaxError, State 6syntaxError, State 5syntaxError, State 4syntaxError, State 3syntaxError, State 2syntaxError, State 1syntaxError, syntaxError]
   // 6 -> [anonymousTerminal Shift Rule 10-action]
   // 7 -> [symbolName Shift Rule 9-action]
   // 14 -> ['?{' Shift State 2-action]
   // 17 -> ['?{' Shift State 3-action]
[State 10]:
520:  iload 4 // LocalVariable{type=int, simpleName=$curTok}
522:  lookupswitch // default -> [State 12syntaxError, State 11syntaxError, State 10syntaxError, State 9syntaxError, State 8syntaxError, State 7syntaxError, State 6syntaxError, State 5syntaxError, State 4syntaxError, State 3syntaxError, State 2syntaxError, State 1syntaxError, syntaxError]
   // 6 -> [anonymousTerminal Shift Rule 10-action]
   // 7 -> [symbolName Shift Rule 9-action]
   // 14 -> ['?{' Shift State 2-action]
   // 17 -> ['?{' Shift State 3-action]
[State 11]:
564:  iload 4 // LocalVariable{type=int, simpleName=$curTok}
566:  lookupswitch // default -> [State 12syntaxError, State 11syntaxError, State 10syntaxError, State 9syntaxError, State 8syntaxError, State 7syntaxError, State 6syntaxError, State 5syntaxError, State 4syntaxError, State 3syntaxError, State 2syntaxError, State 1syntaxError, syntaxError]
   // 8 -> [pipe reduce Rule 12-action, '}' reduce Rule 12-action, Rule 12]
   // 11 -> ['?' Shift Rule 1-action]
   // 12 -> ['?' Shift Rule 3-action]
   // 13 -> ['¿' Shift Rule 2-action]
   // 15 -> [pipe reduce Rule 12-action, '}' reduce Rule 12-action, Rule 12]
[State 12]:
616:  iload 4 // LocalVariable{type=int, simpleName=$curTok}
618:  lookupswitch // default -> [State 12syntaxError, State 11syntaxError, State 10syntaxError, State 9syntaxError, State 8syntaxError, State 7syntaxError, State 6syntaxError, State 5syntaxError, State 4syntaxError, State 3syntaxError, State 2syntaxError, State 1syntaxError, syntaxError]
   // 9 -> [comma reduce Rule 7-action, '}' reduce Rule 7-action, Rule 7]
   // 11 -> ['?' Shift Rule 1-action]
   // 12 -> ['?' Shift Rule 3-action]
   // 13 -> ['¿' Shift Rule 2-action]
   // 15 -> [comma reduce Rule 7-action, '}' reduce Rule 7-action, Rule 7]
[shiftSubroutine]:
668:  astore 11 // LocalVariable{type=ReturnAddress, simpleName=$subroutineReturnAddressName}
[shiftStart]:
670:  aload 6 // LocalVariable{type=int[], simpleName=$stateStack}
672:  iload_2 // LocalVariable{type=int, simpleName=$sp}
673:  iaload
674:  tableswitch // default -> [branch11]
   // 1 -> [$input1]
   // 2 -> [$input1]
   // 3 -> [$input1]
   // 4 -> [$input2]
   // 5 -> [$input3]
   // 6 -> [$input4]
   // 7 -> [$input5]
   // 8 -> [$input6]
   // 9 -> [$input1]
   // 10 -> [$input1]
   // 11 -> [$input4]
   // 12 -> [$input6]
[branch11]:
736:  new 20 // org/vesalainen/bcc/SwitchException
739:  dup
740:  invokespecial 21 // <init> ()V
743:  athrow
[$input1]:
744:  aload_0 // LocalVariable{type=org.vesalainen.bcc.ClassFile$ClassType@6b2896d5, simpleName=this}
745:  aload_1 // ElementImpl{name=$inputReader}
746:  invokespecial 29 // $input1 (Lorg/vesalainen/parser/util/InputReader;)I
749:  istore_3 // LocalVariable{type=int, simpleName=$token}
750:  iload_3 // LocalVariable{type=int, simpleName=$token}
751:  ifge 822 //[branch10]
754:  goto  2028 //[State 12syntaxError, State 11syntaxError, State 10syntaxError, State 9syntaxError, State 8syntaxError, State 7syntaxError, State 6syntaxError, State 5syntaxError, State 4syntaxError, State 3syntaxError, State 2syntaxError, State 1syntaxError, syntaxError]
[$input2]:
757:  aload_0 // LocalVariable{type=org.vesalainen.bcc.ClassFile$ClassType@6b2896d5, simpleName=this}
758:  aload_1 // ElementImpl{name=$inputReader}
759:  invokespecial 32 // $input2 (Lorg/vesalainen/parser/util/InputReader;)I
762:  istore_3 // LocalVariable{type=int, simpleName=$token}
763:  iload_3 // LocalVariable{type=int, simpleName=$token}
764:  ifge 822 //[branch10]
767:  goto  2028 //[State 12syntaxError, State 11syntaxError, State 10syntaxError, State 9syntaxError, State 8syntaxError, State 7syntaxError, State 6syntaxError, State 5syntaxError, State 4syntaxError, State 3syntaxError, State 2syntaxError, State 1syntaxError, syntaxError]
[$input3]:
770:  aload_0 // LocalVariable{type=org.vesalainen.bcc.ClassFile$ClassType@6b2896d5, simpleName=this}
771:  aload_1 // ElementImpl{name=$inputReader}
772:  invokespecial 35 // $input3 (Lorg/vesalainen/parser/util/InputReader;)I
775:  istore_3 // LocalVariable{type=int, simpleName=$token}
776:  iload_3 // LocalVariable{type=int, simpleName=$token}
777:  ifge 822 //[branch10]
780:  goto  2028 //[State 12syntaxError, State 11syntaxError, State 10syntaxError, State 9syntaxError, State 8syntaxError, State 7syntaxError, State 6syntaxError, State 5syntaxError, State 4syntaxError, State 3syntaxError, State 2syntaxError, State 1syntaxError, syntaxError]
[$input4]:
783:  aload_0 // LocalVariable{type=org.vesalainen.bcc.ClassFile$ClassType@6b2896d5, simpleName=this}
784:  aload_1 // ElementImpl{name=$inputReader}
785:  invokespecial 38 // $input4 (Lorg/vesalainen/parser/util/InputReader;)I
788:  istore_3 // LocalVariable{type=int, simpleName=$token}
789:  iload_3 // LocalVariable{type=int, simpleName=$token}
790:  ifge 822 //[branch10]
793:  goto  2028 //[State 12syntaxError, State 11syntaxError, State 10syntaxError, State 9syntaxError, State 8syntaxError, State 7syntaxError, State 6syntaxError, State 5syntaxError, State 4syntaxError, State 3syntaxError, State 2syntaxError, State 1syntaxError, syntaxError]
[$input5]:
796:  aload_0 // LocalVariable{type=org.vesalainen.bcc.ClassFile$ClassType@6b2896d5, simpleName=this}
797:  aload_1 // ElementImpl{name=$inputReader}
798:  invokespecial 41 // $input5 (Lorg/vesalainen/parser/util/InputReader;)I
801:  istore_3 // LocalVariable{type=int, simpleName=$token}
802:  iload_3 // LocalVariable{type=int, simpleName=$token}
803:  ifge 822 //[branch10]
806:  goto  2028 //[State 12syntaxError, State 11syntaxError, State 10syntaxError, State 9syntaxError, State 8syntaxError, State 7syntaxError, State 6syntaxError, State 5syntaxError, State 4syntaxError, State 3syntaxError, State 2syntaxError, State 1syntaxError, syntaxError]
[$input6]:
809:  aload_0 // LocalVariable{type=org.vesalainen.bcc.ClassFile$ClassType@6b2896d5, simpleName=this}
810:  aload_1 // ElementImpl{name=$inputReader}
811:  invokespecial 44 // $input6 (Lorg/vesalainen/parser/util/InputReader;)I
814:  istore_3 // LocalVariable{type=int, simpleName=$token}
815:  iload_3 // LocalVariable{type=int, simpleName=$token}
816:  ifge 822 //[branch10]
819:  goto  2028 //[State 12syntaxError, State 11syntaxError, State 10syntaxError, State 9syntaxError, State 8syntaxError, State 7syntaxError, State 6syntaxError, State 5syntaxError, State 4syntaxError, State 3syntaxError, State 2syntaxError, State 1syntaxError, syntaxError]
[branch10]:
822:  iload_3 // LocalVariable{type=int, simpleName=$token}
823:  istore 4 // LocalVariable{type=int, simpleName=$curTok}
825:  iload 4 // LocalVariable{type=int, simpleName=$curTok}
827:  lookupswitch // default -> [branch13]
   // 0 -> [$term-'?{', $term-'}', $term-'?{', $term-'¿', $term-'?', $term-'?', branch12]
   // 6 -> [$term-anonymousTerminal]
   // 7 -> [$term-symbolName]
   // 8 -> [$term-pipe]
   // 9 -> [$term-comma]
   // 11 -> [$term-'?{', $term-'}', $term-'?{', $term-'¿', $term-'?', $term-'?', branch12]
   // 12 -> [$term-'?{', $term-'}', $term-'?{', $term-'¿', $term-'?', $term-'?', branch12]
   // 13 -> [$term-'?{', $term-'}', $term-'?{', $term-'¿', $term-'?', $term-'?', branch12]
   // 14 -> [$term-'?{', $term-'}', $term-'?{', $term-'¿', $term-'?', $term-'?', branch12]
   // 15 -> [$term-'?{', $term-'}', $term-'?{', $term-'¿', $term-'?', $term-'?', branch12]
   // 17 -> [$term-'?{', $term-'}', $term-'?{', $term-'¿', $term-'?', $term-'?', branch12]
[branch13]:
924:  new 20 // org/vesalainen/bcc/SwitchException
927:  dup
928:  invokespecial 21 // <init> ()V
931:  athrow
[$term-anonymousTerminal]:
932:  aload_0 // LocalVariable{type=org.vesalainen.bcc.ClassFile$ClassType@6b2896d5, simpleName=this}
933:  aload_1 // ElementImpl{name=$inputReader}
934:  invokevirtual 50 // getString ()Ljava/lang/String;
937:  invokevirtual 54 // anonymousTerminal (Ljava/lang/String;)Ljava/lang/String;
940:  astore 9 // LocalVariable{type=java.lang.Object, simpleName=$curDECLARED}
942:  bipush 12
944:  istore 5 // LocalVariable{type=int, simpleName=$curType}
946:  goto  988 //[$term-'?{', $term-'}', $term-'?{', $term-'¿', $term-'?', $term-'?', branch12]
[$term-symbolName]:
949:  aload_0 // LocalVariable{type=org.vesalainen.bcc.ClassFile$ClassType@6b2896d5, simpleName=this}
950:  aload_1 // ElementImpl{name=$inputReader}
951:  invokevirtual 50 // getString ()Ljava/lang/String;
954:  invokevirtual 57 // symbolName (Ljava/lang/String;)Ljava/lang/String;
957:  astore 9 // LocalVariable{type=java.lang.Object, simpleName=$curDECLARED}
959:  bipush 12
961:  istore 5 // LocalVariable{type=int, simpleName=$curType}
963:  goto  988 //[$term-'?{', $term-'}', $term-'?{', $term-'¿', $term-'?', $term-'?', branch12]
[$term-pipe]:
966:  aload_0 // LocalVariable{type=org.vesalainen.bcc.ClassFile$ClassType@6b2896d5, simpleName=this}
967:  invokevirtual 60 // pipe ()V
970:  bipush 8
972:  istore 5 // LocalVariable{type=int, simpleName=$curType}
974:  goto  988 //[$term-'?{', $term-'}', $term-'?{', $term-'¿', $term-'?', $term-'?', branch12]
[$term-comma]:
977:  aload_0 // LocalVariable{type=org.vesalainen.bcc.ClassFile$ClassType@6b2896d5, simpleName=this}
978:  invokevirtual 63 // comma ()V
981:  bipush 8
983:  istore 5 // LocalVariable{type=int, simpleName=$curType}
985:  goto  988 //[$term-'?{', $term-'}', $term-'?{', $term-'¿', $term-'?', $term-'?', branch12]
[$term-'?{', $term-'}', $term-'?{', $term-'¿', $term-'?', $term-'?', branch12]:
988:  aload_1 // ElementImpl{name=$inputReader}
989:  invokevirtual 66 // clear ()V
992:  ret // LocalVariable{type=ReturnAddress, simpleName=$subroutineReturnAddressName}
[updateValueStack]:
994:  astore 11 // LocalVariable{type=ReturnAddress, simpleName=$subroutineReturnAddressName}
996:  iload 5 // LocalVariable{type=int, simpleName=$curType}
998:  dup
999:  bipush 8
1001:  if_icmpne 1008 //[branch15]
1004:  pop
1005:  goto  1051 //[setCurrent-Void]
[branch15]:
1008:  dup
1009:  bipush 12
1011:  if_icmpne 1018 //[branch16]
1014:  pop
1015:  goto  1030 //[DECLARED-cur]
[branch16]:
1018:  pop
1019:  goto  1022 //[branch14]
[branch14]:
1022:  new 20 // org/vesalainen/bcc/SwitchException
1025:  dup
1026:  invokespecial 21 // <init> ()V
1029:  athrow
[DECLARED-cur]:
1030:  aload 7 // LocalVariable{type=int[], simpleName=$typeStack}
1032:  iload_2 // LocalVariable{type=int, simpleName=$sp}
1033:  iload 5 // LocalVariable{type=int, simpleName=$curType}
1035:  iastore
1036:  aload 8 // LocalVariable{type=java.lang.Object[], simpleName=$valueStack}
1038:  iload 5 // LocalVariable{type=int, simpleName=$curType}
1040:  aaload
1041:  checkcast 18 // [Ljava/lang/Object;
1044:  iload_2 // LocalVariable{type=int, simpleName=$sp}
1045:  aload 9 // LocalVariable{type=java.lang.Object, simpleName=$curDECLARED}
1047:  aastore
1048:  goto  1057 //[setCurrent-Exit]
[setCurrent-Void]:
1051:  aload 7 // LocalVariable{type=int[], simpleName=$typeStack}
1053:  iload_2 // LocalVariable{type=int, simpleName=$sp}
1054:  bipush 8
1056:  iastore
[setCurrent-Exit]:
1057:  ret // LocalVariable{type=ReturnAddress, simpleName=$subroutineReturnAddressName}
['?{' Shift State 2-action]:
1059:  iinc 2 1 // $sp+=1
1062:  aload 6 // LocalVariable{type=int[], simpleName=$stateStack}
1064:  iload_2 // LocalVariable{type=int, simpleName=$sp}
1065:  iconst_2
1066:  iastore
1067:  iconst_m1
1068:  istore_3 // LocalVariable{type=int, simpleName=$token}
1069:  goto  57 //[start]
['?{' Shift State 3-action]:
1072:  iinc 2 1 // $sp+=1
1075:  aload 6 // LocalVariable{type=int[], simpleName=$stateStack}
1077:  iload_2 // LocalVariable{type=int, simpleName=$sp}
1078:  iconst_3
1079:  iastore
1080:  iconst_m1
1081:  istore_3 // LocalVariable{type=int, simpleName=$token}
1082:  goto  57 //[start]
[anonymousTerminal Shift Rule 10-action]:
1085:  iinc 2 1 // $sp+=1
1088:  jsr 1190 //[Rule 10subroutine]
1091:  iconst_m1
1092:  istore_3 // LocalVariable{type=int, simpleName=$token}
1093:  goto  1232 //[symbol-goto]
[symbolName Shift Rule 9-action]:
1096:  iinc 2 1 // $sp+=1
1099:  jsr 1295 //[Rule 9subroutine]
1102:  iconst_m1
1103:  istore_3 // LocalVariable{type=int, simpleName=$token}
1104:  goto  1232 //[symbol-goto]
['?' Shift Rule 3-action]:
1107:  iinc 2 1 // $sp+=1
1110:  jsr 1337 //[Rule 3subroutine]
1113:  iconst_m1
1114:  istore_3 // LocalVariable{type=int, simpleName=$token}
1115:  goto  1379 //[expression-goto]
['¿' Shift Rule 2-action]:
1118:  iinc 2 1 // $sp+=1
1121:  jsr 1442 //[Rule 2subroutine]
1124:  iconst_m1
1125:  istore_3 // LocalVariable{type=int, simpleName=$token}
1126:  goto  1379 //[expression-goto]
['?' Shift Rule 1-action]:
1129:  iinc 2 1 // $sp+=1
1132:  jsr 1484 //[Rule 1subroutine]
1135:  iconst_m1
1136:  istore_3 // LocalVariable{type=int, simpleName=$token}
1137:  goto  1379 //[expression-goto]
[pipe Shift State 9-action]:
1140:  iinc 2 1 // $sp+=1
1143:  aload 6 // LocalVariable{type=int[], simpleName=$stateStack}
1145:  iload_2 // LocalVariable{type=int, simpleName=$sp}
1146:  bipush 9
1148:  iastore
1149:  iconst_m1
1150:  istore_3 // LocalVariable{type=int, simpleName=$token}
1151:  goto  57 //[start]
['}' Shift Rule 6-action]:
1154:  iinc 2 1 // $sp+=1
1157:  jsr 1532 //[Rule 6subroutine]
1160:  iconst_m1
1161:  istore_3 // LocalVariable{type=int, simpleName=$token}
1162:  goto  1379 //[expression-goto]
[comma Shift State 10-action]:
1165:  iinc 2 1 // $sp+=1
1168:  aload 6 // LocalVariable{type=int[], simpleName=$stateStack}
1170:  iload_2 // LocalVariable{type=int, simpleName=$sp}
1171:  bipush 10
1173:  iastore
1174:  iconst_m1
1175:  istore_3 // LocalVariable{type=int, simpleName=$token}
1176:  goto  57 //[start]
['}' Shift Rule 4-action]:
1179:  iinc 2 1 // $sp+=1
1182:  jsr 1580 //[Rule 4subroutine]
1185:  iconst_m1
1186:  istore_3 // LocalVariable{type=int, simpleName=$token}
1187:  goto  1379 //[expression-goto]
[Rule 10subroutine]:
1190:  astore 11 // LocalVariable{type=ReturnAddress, simpleName=$subroutineReturnAddressName}
1192:  iinc 2 -1 // $sp+=-1
1195:  aload 8 // LocalVariable{type=java.lang.Object[], simpleName=$valueStack}
1197:  bipush 12
1199:  aaload
1200:  checkcast 18 // [Ljava/lang/Object;
1203:  iload_2 // LocalVariable{type=int, simpleName=$sp}
1204:  aload_0 // LocalVariable{type=org.vesalainen.bcc.ClassFile$ClassType@6b2896d5, simpleName=this}
1205:  aload 8 // LocalVariable{type=java.lang.Object[], simpleName=$valueStack}
1207:  bipush 12
1209:  aaload
1210:  checkcast 18 // [Ljava/lang/Object;
1213:  iload_2 // LocalVariable{type=int, simpleName=$sp}
1214:  iconst_0
1215:  iadd
1216:  aaload
1217:  checkcast 68 // java/lang/String
1220:  invokevirtual 71 // symbol (Ljava/lang/String;)Ljava/lang/String;
1223:  aastore
1224:  aload 7 // LocalVariable{type=int[], simpleName=$typeStack}
1226:  iload_2 // LocalVariable{type=int, simpleName=$sp}
1227:  bipush 12
1229:  iastore
1230:  ret // LocalVariable{type=ReturnAddress, simpleName=$subroutineReturnAddressName}
[symbol-goto]:
1232:  aload 6 // LocalVariable{type=int[], simpleName=$stateStack}
1234:  iload_2 // LocalVariable{type=int, simpleName=$sp}
1235:  iaload
1236:  dup
1237:  iconst_1
1238:  if_icmpne 1245 //[branch18]
1241:  pop
1242:  goto  1640 //[Rule 5-goto-action]
[branch18]:
1245:  dup
1246:  iconst_2
1247:  if_icmpne 1254 //[branch19]
1250:  pop
1251:  goto  1640 //[Rule 5-goto-action]
[branch19]:
1254:  dup
1255:  iconst_3
1256:  if_icmpne 1263 //[branch20]
1259:  pop
1260:  goto  1640 //[Rule 5-goto-action]
[branch20]:
1263:  dup
1264:  bipush 9
1266:  if_icmpne 1273 //[branch21]
1269:  pop
1270:  goto  1640 //[Rule 5-goto-action]
[branch21]:
1273:  dup
1274:  bipush 10
1276:  if_icmpne 1283 //[branch22]
1279:  pop
1280:  goto  1640 //[Rule 5-goto-action]
[branch22]:
1283:  pop
1284:  goto  1287 //[branch17]
[branch17]:
1287:  new 20 // org/vesalainen/bcc/SwitchException
1290:  dup
1291:  invokespecial 21 // <init> ()V
1294:  athrow
[Rule 9subroutine]:
1295:  astore 11 // LocalVariable{type=ReturnAddress, simpleName=$subroutineReturnAddressName}
1297:  iinc 2 -1 // $sp+=-1
1300:  aload 8 // LocalVariable{type=java.lang.Object[], simpleName=$valueStack}
1302:  bipush 12
1304:  aaload
1305:  checkcast 18 // [Ljava/lang/Object;
1308:  iload_2 // LocalVariable{type=int, simpleName=$sp}
1309:  aload_0 // LocalVariable{type=org.vesalainen.bcc.ClassFile$ClassType@6b2896d5, simpleName=this}
1310:  aload 8 // LocalVariable{type=java.lang.Object[], simpleName=$valueStack}
1312:  bipush 12
1314:  aaload
1315:  checkcast 18 // [Ljava/lang/Object;
1318:  iload_2 // LocalVariable{type=int, simpleName=$sp}
1319:  iconst_0
1320:  iadd
1321:  aaload
1322:  checkcast 68 // java/lang/String
1325:  invokevirtual 71 // symbol (Ljava/lang/String;)Ljava/lang/String;
1328:  aastore
1329:  aload 7 // LocalVariable{type=int[], simpleName=$typeStack}
1331:  iload_2 // LocalVariable{type=int, simpleName=$sp}
1332:  bipush 12
1334:  iastore
1335:  ret // LocalVariable{type=ReturnAddress, simpleName=$subroutineReturnAddressName}
[Rule 3subroutine]:
1337:  astore 11 // LocalVariable{type=ReturnAddress, simpleName=$subroutineReturnAddressName}
1339:  iinc 2 -2 // $sp+=-2
1342:  aload 8 // LocalVariable{type=java.lang.Object[], simpleName=$valueStack}
1344:  bipush 12
1346:  aaload
1347:  checkcast 18 // [Ljava/lang/Object;
1350:  iload_2 // LocalVariable{type=int, simpleName=$sp}
1351:  aload_0 // LocalVariable{type=org.vesalainen.bcc.ClassFile$ClassType@6b2896d5, simpleName=this}
1352:  aload 8 // LocalVariable{type=java.lang.Object[], simpleName=$valueStack}
1354:  bipush 12
1356:  aaload
1357:  checkcast 18 // [Ljava/lang/Object;
1360:  iload_2 // LocalVariable{type=int, simpleName=$sp}
1361:  iconst_0
1362:  iadd
1363:  aaload
1364:  checkcast 68 // java/lang/String
1367:  invokevirtual 74 // plainPlus (Ljava/lang/String;)Ljava/lang/String;
1370:  aastore
1371:  aload 7 // LocalVariable{type=int[], simpleName=$typeStack}
1373:  iload_2 // LocalVariable{type=int, simpleName=$sp}
1374:  bipush 12
1376:  iastore
1377:  ret // LocalVariable{type=ReturnAddress, simpleName=$subroutineReturnAddressName}
[expression-goto]:
1379:  aload 6 // LocalVariable{type=int[], simpleName=$stateStack}
1381:  iload_2 // LocalVariable{type=int, simpleName=$sp}
1382:  iaload
1383:  dup
1384:  iconst_1
1385:  if_icmpne 1392 //[branch24]
1388:  pop
1389:  goto  1649 //[State 4-goto-action]
[branch24]:
1392:  dup
1393:  iconst_2
1394:  if_icmpne 1401 //[branch25]
1397:  pop
1398:  goto  1660 //[State 6-goto-action]
[branch25]:
1401:  dup
1402:  iconst_3
1403:  if_icmpne 1410 //[branch26]
1406:  pop
1407:  goto  1672 //[State 8-goto-action]
[branch26]:
1410:  dup
1411:  bipush 9
1413:  if_icmpne 1420 //[branch27]
1416:  pop
1417:  goto  1684 //[State 11-goto-action]
[branch27]:
1420:  dup
1421:  bipush 10
1423:  if_icmpne 1430 //[branch28]
1426:  pop
1427:  goto  1696 //[State 12-goto-action]
[branch28]:
1430:  pop
1431:  goto  1434 //[branch23]
[branch23]:
1434:  new 20 // org/vesalainen/bcc/SwitchException
1437:  dup
1438:  invokespecial 21 // <init> ()V
1441:  athrow
[Rule 2subroutine]:
1442:  astore 11 // LocalVariable{type=ReturnAddress, simpleName=$subroutineReturnAddressName}
1444:  iinc 2 -2 // $sp+=-2
1447:  aload 8 // LocalVariable{type=java.lang.Object[], simpleName=$valueStack}
1449:  bipush 12
1451:  aaload
1452:  checkcast 18 // [Ljava/lang/Object;
1455:  iload_2 // LocalVariable{type=int, simpleName=$sp}
1456:  aload_0 // LocalVariable{type=org.vesalainen.bcc.ClassFile$ClassType@6b2896d5, simpleName=this}
1457:  aload 8 // LocalVariable{type=java.lang.Object[], simpleName=$valueStack}
1459:  bipush 12
1461:  aaload
1462:  checkcast 18 // [Ljava/lang/Object;
1465:  iload_2 // LocalVariable{type=int, simpleName=$sp}
1466:  iconst_0
1467:  iadd
1468:  aaload
1469:  checkcast 68 // java/lang/String
1472:  invokevirtual 77 // plainOpt (Ljava/lang/String;)Ljava/lang/String;
1475:  aastore
1476:  aload 7 // LocalVariable{type=int[], simpleName=$typeStack}
1478:  iload_2 // LocalVariable{type=int, simpleName=$sp}
1479:  bipush 12
1481:  iastore
1482:  ret // LocalVariable{type=ReturnAddress, simpleName=$subroutineReturnAddressName}
[Rule 1subroutine]:
1484:  astore 11 // LocalVariable{type=ReturnAddress, simpleName=$subroutineReturnAddressName}
1486:  iinc 2 -2 // $sp+=-2
1489:  aload 8 // LocalVariable{type=java.lang.Object[], simpleName=$valueStack}
1491:  bipush 12
1493:  aaload
1494:  checkcast 18 // [Ljava/lang/Object;
1497:  iload_2 // LocalVariable{type=int, simpleName=$sp}
1498:  aload_0 // LocalVariable{type=org.vesalainen.bcc.ClassFile$ClassType@6b2896d5, simpleName=this}
1499:  aload 8 // LocalVariable{type=java.lang.Object[], simpleName=$valueStack}
1501:  bipush 12
1503:  aaload
1504:  checkcast 18 // [Ljava/lang/Object;
1507:  iload_2 // LocalVariable{type=int, simpleName=$sp}
1508:  iconst_0
1509:  iadd
1510:  aaload
1511:  checkcast 68 // java/lang/String
1514:  invokevirtual 80 // plainStar (Ljava/lang/String;)Ljava/lang/String;
1517:  aastore
1518:  aload 7 // LocalVariable{type=int[], simpleName=$typeStack}
1520:  iload_2 // LocalVariable{type=int, simpleName=$sp}
1521:  bipush 12
1523:  iastore
1524:  ret // LocalVariable{type=ReturnAddress, simpleName=$subroutineReturnAddressName}
[Eof reduce Rule 0-action, Rule 0]:
1526:  jsr 1708 //[Rule 0subroutine]
1529:  goto  2028 //[State 12syntaxError, State 11syntaxError, State 10syntaxError, State 9syntaxError, State 8syntaxError, State 7syntaxError, State 6syntaxError, State 5syntaxError, State 4syntaxError, State 3syntaxError, State 2syntaxError, State 1syntaxError, syntaxError]
[Rule 6subroutine]:
1532:  astore 11 // LocalVariable{type=ReturnAddress, simpleName=$subroutineReturnAddressName}
1534:  iinc 2 -3 // $sp+=-3
1537:  aload 8 // LocalVariable{type=java.lang.Object[], simpleName=$valueStack}
1539:  bipush 12
1541:  aaload
1542:  checkcast 18 // [Ljava/lang/Object;
1545:  iload_2 // LocalVariable{type=int, simpleName=$sp}
1546:  aload_0 // LocalVariable{type=org.vesalainen.bcc.ClassFile$ClassType@6b2896d5, simpleName=this}
1547:  aload 8 // LocalVariable{type=java.lang.Object[], simpleName=$valueStack}
1549:  bipush 12
1551:  aaload
1552:  checkcast 18 // [Ljava/lang/Object;
1555:  iload_2 // LocalVariable{type=int, simpleName=$sp}
1556:  iconst_1
1557:  iadd
1558:  aaload
1559:  checkcast 82 // java/util/List
1562:  invokevirtual 86 // plainChoise (Ljava/util/List;)Ljava/lang/String;
1565:  aastore
1566:  aload 7 // LocalVariable{type=int[], simpleName=$typeStack}
1568:  iload_2 // LocalVariable{type=int, simpleName=$sp}
1569:  bipush 12
1571:  iastore
1572:  ret // LocalVariable{type=ReturnAddress, simpleName=$subroutineReturnAddressName}
[pipe reduce Rule 11-action, '}' reduce Rule 11-action, Rule 11]:
1574:  jsr 1727 //[Rule 11subroutine]
1577:  goto  1769 //[choiseList-goto]
[Rule 4subroutine]:
1580:  astore 11 // LocalVariable{type=ReturnAddress, simpleName=$subroutineReturnAddressName}
1582:  iinc 2 -3 // $sp+=-3
1585:  aload 8 // LocalVariable{type=java.lang.Object[], simpleName=$valueStack}
1587:  bipush 12
1589:  aaload
1590:  checkcast 18 // [Ljava/lang/Object;
1593:  iload_2 // LocalVariable{type=int, simpleName=$sp}
1594:  aload_0 // LocalVariable{type=org.vesalainen.bcc.ClassFile$ClassType@6b2896d5, simpleName=this}
1595:  aload 8 // LocalVariable{type=java.lang.Object[], simpleName=$valueStack}
1597:  bipush 12
1599:  aaload
1600:  checkcast 18 // [Ljava/lang/Object;
1603:  iload_2 // LocalVariable{type=int, simpleName=$sp}
1604:  iconst_1
1605:  iadd
1606:  aaload
1607:  checkcast 82 // java/util/List
1610:  invokevirtual 89 // plainSeq (Ljava/util/List;)Ljava/lang/String;
1613:  aastore
1614:  aload 7 // LocalVariable{type=int[], simpleName=$typeStack}
1616:  iload_2 // LocalVariable{type=int, simpleName=$sp}
1617:  bipush 12
1619:  iastore
1620:  ret // LocalVariable{type=ReturnAddress, simpleName=$subroutineReturnAddressName}
[comma reduce Rule 8-action, '}' reduce Rule 8-action, Rule 8]:
1622:  jsr 1788 //[Rule 8subroutine]
1625:  goto  1830 //[seqList-goto]
[pipe reduce Rule 12-action, '}' reduce Rule 12-action, Rule 12]:
1628:  jsr 1849 //[Rule 12subroutine]
1631:  goto  1769 //[choiseList-goto]
[comma reduce Rule 7-action, '}' reduce Rule 7-action, Rule 7]:
1634:  jsr 1906 //[Rule 7subroutine]
1637:  goto  1830 //[seqList-goto]
[Rule 5-goto-action]:
1640:  iinc 2 1 // $sp+=1
1643:  jsr 1963 //[Rule 5subroutine]
1646:  goto  1379 //[expression-goto]
[State 4-goto-action]:
1649:  iinc 2 1 // $sp+=1
1652:  aload 6 // LocalVariable{type=int[], simpleName=$stateStack}
1654:  iload_2 // LocalVariable{type=int, simpleName=$sp}
1655:  iconst_4
1656:  iastore
1657:  goto  57 //[start]
[State 6-goto-action]:
1660:  iinc 2 1 // $sp+=1
1663:  aload 6 // LocalVariable{type=int[], simpleName=$stateStack}
1665:  iload_2 // LocalVariable{type=int, simpleName=$sp}
1666:  bipush 6
1668:  iastore
1669:  goto  57 //[start]
[State 8-goto-action]:
1672:  iinc 2 1 // $sp+=1
1675:  aload 6 // LocalVariable{type=int[], simpleName=$stateStack}
1677:  iload_2 // LocalVariable{type=int, simpleName=$sp}
1678:  bipush 8
1680:  iastore
1681:  goto  57 //[start]
[State 11-goto-action]:
1684:  iinc 2 1 // $sp+=1
1687:  aload 6 // LocalVariable{type=int[], simpleName=$stateStack}
1689:  iload_2 // LocalVariable{type=int, simpleName=$sp}
1690:  bipush 11
1692:  iastore
1693:  goto  57 //[start]
[State 12-goto-action]:
1696:  iinc 2 1 // $sp+=1
1699:  aload 6 // LocalVariable{type=int[], simpleName=$stateStack}
1701:  iload_2 // LocalVariable{type=int, simpleName=$sp}
1702:  bipush 12
1704:  iastore
1705:  goto  57 //[start]
[Rule 0subroutine]:
1708:  astore 11 // LocalVariable{type=ReturnAddress, simpleName=$subroutineReturnAddressName}
1710:  iinc 2 -1 // $sp+=-1
1713:  aload 8 // LocalVariable{type=java.lang.Object[], simpleName=$valueStack}
1715:  bipush 12
1717:  aaload
1718:  checkcast 18 // [Ljava/lang/Object;
1721:  iconst_0
1722:  aaload
1723:  checkcast 68 // java/lang/String
1726:  areturn
[Rule 11subroutine]:
1727:  astore 11 // LocalVariable{type=ReturnAddress, simpleName=$subroutineReturnAddressName}
1729:  iinc 2 -1 // $sp+=-1
1732:  aload 8 // LocalVariable{type=java.lang.Object[], simpleName=$valueStack}
1734:  bipush 12
1736:  aaload
1737:  checkcast 18 // [Ljava/lang/Object;
1740:  iload_2 // LocalVariable{type=int, simpleName=$sp}
1741:  aload_0 // LocalVariable{type=org.vesalainen.bcc.ClassFile$ClassType@6b2896d5, simpleName=this}
1742:  aload 8 // LocalVariable{type=java.lang.Object[], simpleName=$valueStack}
1744:  bipush 12
1746:  aaload
1747:  checkcast 18 // [Ljava/lang/Object;
1750:  iload_2 // LocalVariable{type=int, simpleName=$sp}
1751:  iconst_0
1752:  iadd
1753:  aaload
1754:  checkcast 68 // java/lang/String
1757:  invokevirtual 93 // choiseList (Ljava/lang/String;)Ljava/util/List;
1760:  aastore
1761:  aload 7 // LocalVariable{type=int[], simpleName=$typeStack}
1763:  iload_2 // LocalVariable{type=int, simpleName=$sp}
1764:  bipush 12
1766:  iastore
1767:  ret // LocalVariable{type=ReturnAddress, simpleName=$subroutineReturnAddressName}
[choiseList-goto]:
1769:  aload 6 // LocalVariable{type=int[], simpleName=$stateStack}
1771:  iload_2 // LocalVariable{type=int, simpleName=$sp}
1772:  iaload
1773:  iconst_2
1774:  if_icmpeq 2005 //[State 5-goto-action]
1777:  goto  1780 //[branch29]
[branch29]:
1780:  new 20 // org/vesalainen/bcc/SwitchException
1783:  dup
1784:  invokespecial 21 // <init> ()V
1787:  athrow
[Rule 8subroutine]:
1788:  astore 11 // LocalVariable{type=ReturnAddress, simpleName=$subroutineReturnAddressName}
1790:  iinc 2 -1 // $sp+=-1
1793:  aload 8 // LocalVariable{type=java.lang.Object[], simpleName=$valueStack}
1795:  bipush 12
1797:  aaload
1798:  checkcast 18 // [Ljava/lang/Object;
1801:  iload_2 // LocalVariable{type=int, simpleName=$sp}
1802:  aload_0 // LocalVariable{type=org.vesalainen.bcc.ClassFile$ClassType@6b2896d5, simpleName=this}
1803:  aload 8 // LocalVariable{type=java.lang.Object[], simpleName=$valueStack}
1805:  bipush 12
1807:  aaload
1808:  checkcast 18 // [Ljava/lang/Object;
1811:  iload_2 // LocalVariable{type=int, simpleName=$sp}
1812:  iconst_0
1813:  iadd
1814:  aaload
1815:  checkcast 68 // java/lang/String
1818:  invokevirtual 96 // seqList (Ljava/lang/String;)Ljava/util/List;
1821:  aastore
1822:  aload 7 // LocalVariable{type=int[], simpleName=$typeStack}
1824:  iload_2 // LocalVariable{type=int, simpleName=$sp}
1825:  bipush 12
1827:  iastore
1828:  ret // LocalVariable{type=ReturnAddress, simpleName=$subroutineReturnAddressName}
[seqList-goto]:
1830:  aload 6 // LocalVariable{type=int[], simpleName=$stateStack}
1832:  iload_2 // LocalVariable{type=int, simpleName=$sp}
1833:  iaload
1834:  iconst_3
1835:  if_icmpeq 2016 //[State 7-goto-action]
1838:  goto  1841 //[branch30]
[branch30]:
1841:  new 20 // org/vesalainen/bcc/SwitchException
1844:  dup
1845:  invokespecial 21 // <init> ()V
1848:  athrow
[Rule 12subroutine]:
1849:  astore 11 // LocalVariable{type=ReturnAddress, simpleName=$subroutineReturnAddressName}
1851:  iinc 2 -3 // $sp+=-3
1854:  aload 8 // LocalVariable{type=java.lang.Object[], simpleName=$valueStack}
1856:  bipush 12
1858:  aaload
1859:  checkcast 18 // [Ljava/lang/Object;
1862:  iload_2 // LocalVariable{type=int, simpleName=$sp}
1863:  aload_0 // LocalVariable{type=org.vesalainen.bcc.ClassFile$ClassType@6b2896d5, simpleName=this}
1864:  aload 8 // LocalVariable{type=java.lang.Object[], simpleName=$valueStack}
1866:  bipush 12
1868:  aaload
1869:  checkcast 18 // [Ljava/lang/Object;
1872:  iload_2 // LocalVariable{type=int, simpleName=$sp}
1873:  iconst_0
1874:  iadd
1875:  aaload
1876:  checkcast 82 // java/util/List
1879:  aload 8 // LocalVariable{type=java.lang.Object[], simpleName=$valueStack}
1881:  bipush 12
1883:  aaload
1884:  checkcast 18 // [Ljava/lang/Object;
1887:  iload_2 // LocalVariable{type=int, simpleName=$sp}
1888:  iconst_2
1889:  iadd
1890:  aaload
1891:  checkcast 68 // java/lang/String
1894:  invokevirtual 99 // choiseList (Ljava/util/List;Ljava/lang/String;)Ljava/util/List;
1897:  aastore
1898:  aload 7 // LocalVariable{type=int[], simpleName=$typeStack}
1900:  iload_2 // LocalVariable{type=int, simpleName=$sp}
1901:  bipush 12
1903:  iastore
1904:  ret // LocalVariable{type=ReturnAddress, simpleName=$subroutineReturnAddressName}
[Rule 7subroutine]:
1906:  astore 11 // LocalVariable{type=ReturnAddress, simpleName=$subroutineReturnAddressName}
1908:  iinc 2 -3 // $sp+=-3
1911:  aload 8 // LocalVariable{type=java.lang.Object[], simpleName=$valueStack}
1913:  bipush 12
1915:  aaload
1916:  checkcast 18 // [Ljava/lang/Object;
1919:  iload_2 // LocalVariable{type=int, simpleName=$sp}
1920:  aload_0 // LocalVariable{type=org.vesalainen.bcc.ClassFile$ClassType@6b2896d5, simpleName=this}
1921:  aload 8 // LocalVariable{type=java.lang.Object[], simpleName=$valueStack}
1923:  bipush 12
1925:  aaload
1926:  checkcast 18 // [Ljava/lang/Object;
1929:  iload_2 // LocalVariable{type=int, simpleName=$sp}
1930:  iconst_0
1931:  iadd
1932:  aaload
1933:  checkcast 82 // java/util/List
1936:  aload 8 // LocalVariable{type=java.lang.Object[], simpleName=$valueStack}
1938:  bipush 12
1940:  aaload
1941:  checkcast 18 // [Ljava/lang/Object;
1944:  iload_2 // LocalVariable{type=int, simpleName=$sp}
1945:  iconst_2
1946:  iadd
1947:  aaload
1948:  checkcast 68 // java/lang/String
1951:  invokevirtual 101 // seqList (Ljava/util/List;Ljava/lang/String;)Ljava/util/List;
1954:  aastore
1955:  aload 7 // LocalVariable{type=int[], simpleName=$typeStack}
1957:  iload_2 // LocalVariable{type=int, simpleName=$sp}
1958:  bipush 12
1960:  iastore
1961:  ret // LocalVariable{type=ReturnAddress, simpleName=$subroutineReturnAddressName}
[Rule 5subroutine]:
1963:  astore 11 // LocalVariable{type=ReturnAddress, simpleName=$subroutineReturnAddressName}
1965:  iinc 2 -1 // $sp+=-1
1968:  aload 8 // LocalVariable{type=java.lang.Object[], simpleName=$valueStack}
1970:  bipush 12
1972:  aaload
1973:  checkcast 18 // [Ljava/lang/Object;
1976:  iload_2 // LocalVariable{type=int, simpleName=$sp}
1977:  aload_0 // LocalVariable{type=org.vesalainen.bcc.ClassFile$ClassType@6b2896d5, simpleName=this}
1978:  aload 8 // LocalVariable{type=java.lang.Object[], simpleName=$valueStack}
1980:  bipush 12
1982:  aaload
1983:  checkcast 18 // [Ljava/lang/Object;
1986:  iload_2 // LocalVariable{type=int, simpleName=$sp}
1987:  iconst_0
1988:  iadd
1989:  aaload
1990:  checkcast 68 // java/lang/String
1993:  invokevirtual 104 // plainSymbol (Ljava/lang/String;)Ljava/lang/String;
1996:  aastore
1997:  aload 7 // LocalVariable{type=int[], simpleName=$typeStack}
1999:  iload_2 // LocalVariable{type=int, simpleName=$sp}
2000:  bipush 12
2002:  iastore
2003:  ret // LocalVariable{type=ReturnAddress, simpleName=$subroutineReturnAddressName}
[State 5-goto-action]:
2005:  iinc 2 1 // $sp+=1
2008:  aload 6 // LocalVariable{type=int[], simpleName=$stateStack}
2010:  iload_2 // LocalVariable{type=int, simpleName=$sp}
2011:  iconst_5
2012:  iastore
2013:  goto  57 //[start]
[State 7-goto-action]:
2016:  iinc 2 1 // $sp+=1
2019:  aload 6 // LocalVariable{type=int[], simpleName=$stateStack}
2021:  iload_2 // LocalVariable{type=int, simpleName=$sp}
2022:  bipush 7
2024:  iastore
2025:  goto  57 //[start]
[State 12syntaxError, State 11syntaxError, State 10syntaxError, State 9syntaxError, State 8syntaxError, State 7syntaxError, State 6syntaxError, State 5syntaxError, State 4syntaxError, State 3syntaxError, State 2syntaxError, State 1syntaxError, syntaxError]:
2028:  aload_1 // ElementImpl{name=$inputReader}
2029:  invokevirtual 107 // throwSyntaxErrorException ()V
2032:  goto  38 //[reset]
[syntaxErrorExceptionHandler]:
2035:  athrow
[exceptionHandler]:
2036:  astore 10 // LocalVariable{type=java.lang.Throwable, simpleName=$throwable}
2038:  aload_1 // ElementImpl{name=$inputReader}
2039:  aload 10 // LocalVariable{type=java.lang.Throwable, simpleName=$throwable}
2041:  invokevirtual 110 // throwSyntaxErrorException (Ljava/lang/Throwable;)V
2044:  goto  38 //[reset]
parse(Ljava/lang/String;)Ljava/lang/String;
0:  aload_0 // LocalVariable{type=org.vesalainen.bcc.ClassFile$ClassType@6b2896d5, simpleName=this}
1:  new 46 // org/vesalainen/parser/util/InputReader
4:  dup
5:  aload_1 // text
6:  invokespecial 129 // <init> (Ljava/lang/CharSequence;)V
9:  invokevirtual 131 // $parseExpression (Lorg/vesalainen/parser/util/InputReader;)Ljava/lang/String;
12:  areturn
$input5(Lorg/vesalainen/parser/util/InputReader;)I
[start]:
0:  iconst_m1
1:  istore_2 // LocalVariable{type=int, simpleName=cc}
2:  iconst_m1
3:  istore_3 // LocalVariable{type=int, simpleName=accepted}
[S0]:
4:  iconst_m1
5:  istore_3 // LocalVariable{type=int, simpleName=accepted}
6:  aload_1 // ElementImpl{name=reader}
7:  invokevirtual 137 // read ()I
10:  istore_2 // LocalVariable{type=int, simpleName=cc}
11:  iload_2 // LocalVariable{type=int, simpleName=cc}
12:  iflt 69 //[eof]
15:  iload_2 // LocalVariable{type=int, simpleName=cc}
16:  dup
17:  bipush 44
19:  if_icmpne 26 //[branch1]
22:  pop
23:  goto  40 //[S0-,>S(1), S(1)]
[branch1]:
26:  dup
27:  bipush 125
29:  if_icmpne 36 //[branch2]
32:  pop
33:  goto  46 //[S0-}>S(2), S(2)]
[branch2]:
36:  pop
37:  goto  52 //[error]
[S0-,>S(1), S(1)]:
40:  bipush 9
42:  istore_3 // LocalVariable{type=int, simpleName=accepted}
43:  goto  67 //[exit]
[S0-}>S(2), S(2)]:
46:  bipush 15
48:  istore_3 // LocalVariable{type=int, simpleName=accepted}
49:  goto  67 //[exit]
[error]:
52:  iload_3 // LocalVariable{type=int, simpleName=accepted}
53:  iconst_m1
54:  if_icmpne 59 //[pushback]
57:  iload_3 // LocalVariable{type=int, simpleName=accepted}
58:  ireturn
[pushback]:
59:  aload_1 // ElementImpl{name=reader}
60:  iload_2 // LocalVariable{type=int, simpleName=cc}
61:  invokevirtual 141 // unread (I)V
64:  goto  67 //[exit]
[exit]:
67:  iload_3 // LocalVariable{type=int, simpleName=accepted}
68:  ireturn
[eof]:
69:  iload_3 // LocalVariable{type=int, simpleName=accepted}
70:  iconst_m1
71:  if_icmpne 76 //[eofacc]
74:  iconst_0
75:  ireturn
[eofacc]:
76:  iload_3 // LocalVariable{type=int, simpleName=accepted}
77:  ireturn
$input2(Lorg/vesalainen/parser/util/InputReader;)I
[start]:
0:  iconst_m1
1:  istore_2 // LocalVariable{type=int, simpleName=cc}
2:  iconst_m1
3:  istore_3 // LocalVariable{type=int, simpleName=accepted}
[S0]:
4:  iconst_m1
5:  istore_3 // LocalVariable{type=int, simpleName=accepted}
6:  aload_1 // ElementImpl{name=reader}
7:  invokevirtual 137 // read ()I
10:  istore_2 // LocalVariable{type=int, simpleName=cc}
11:  iload_2 // LocalVariable{type=int, simpleName=cc}
12:  iflt 85 //[eof]
15:  iload_2 // LocalVariable{type=int, simpleName=cc}
16:  dup
17:  ldc 146
19:  if_icmpne 26 //[branch1]
22:  pop
23:  goto  50 //[S0-¿>S(1), S(1)]
[branch1]:
26:  dup
27:  ldc 147
29:  if_icmpne 36 //[branch2]
32:  pop
33:  goto  56 //[S0-0x2295>S(2), S(2)]
[branch2]:
36:  dup
37:  ldc 148
39:  if_icmpne 46 //[branch3]
42:  pop
43:  goto  62 //[S0-0x229b>S(3), S(3)]
[branch3]:
46:  pop
47:  goto  68 //[error]
[S0-¿>S(1), S(1)]:
50:  bipush 13
52:  istore_3 // LocalVariable{type=int, simpleName=accepted}
53:  goto  83 //[exit]
[S0-0x2295>S(2), S(2)]:
56:  bipush 12
58:  istore_3 // LocalVariable{type=int, simpleName=accepted}
59:  goto  83 //[exit]
[S0-0x229b>S(3), S(3)]:
62:  bipush 11
64:  istore_3 // LocalVariable{type=int, simpleName=accepted}
65:  goto  83 //[exit]
[error]:
68:  iload_3 // LocalVariable{type=int, simpleName=accepted}
69:  iconst_m1
70:  if_icmpne 75 //[pushback]
73:  iload_3 // LocalVariable{type=int, simpleName=accepted}
74:  ireturn
[pushback]:
75:  aload_1 // ElementImpl{name=reader}
76:  iload_2 // LocalVariable{type=int, simpleName=cc}
77:  invokevirtual 141 // unread (I)V
80:  goto  83 //[exit]
[exit]:
83:  iload_3 // LocalVariable{type=int, simpleName=accepted}
84:  ireturn
[eof]:
85:  iload_3 // LocalVariable{type=int, simpleName=accepted}
86:  iconst_m1
87:  if_icmpne 92 //[eofacc]
90:  iconst_0
91:  ireturn
[eofacc]:
92:  iload_3 // LocalVariable{type=int, simpleName=accepted}
93:  ireturn
$input1(Lorg/vesalainen/parser/util/InputReader;)I
[start]:
0:  iconst_m1
1:  istore_2 // LocalVariable{type=int, simpleName=cc}
2:  iconst_m1
3:  istore_3 // LocalVariable{type=int, simpleName=accepted}
[S0]:
4:  iconst_m1
5:  istore_3 // LocalVariable{type=int, simpleName=accepted}
6:  aload_1 // ElementImpl{name=reader}
7:  invokevirtual 137 // read ()I
10:  istore_2 // LocalVariable{type=int, simpleName=cc}
11:  iload_2 // LocalVariable{type=int, simpleName=cc}
12:  iflt 711 //[eof]
15:  iload_2 // LocalVariable{type=int, simpleName=cc}
16:  bipush 45
18:  if_icmplt 30 //[S0--->>S(1)]
21:  iload_2 // LocalVariable{type=int, simpleName=cc}
22:  bipush 63
24:  if_icmpge 30 //[S0--->>S(1)]
27:  goto  156 //[S(1)]
[S0--->>S(1)]:
30:  iload_2 // LocalVariable{type=int, simpleName=cc}
31:  bipush 97 //'a'
33:  if_icmplt 45 //[S0-a-{>S(1)]
36:  iload_2 // LocalVariable{type=int, simpleName=cc}
37:  bipush 124
39:  if_icmpge 45 //[S0-a-{>S(1)]
42:  goto  156 //[S(1)]
[S0-a-{>S(1)]:
45:  iload_2 // LocalVariable{type=int, simpleName=cc}
46:  ldc 149
48:  if_icmpne 54 //[S0-0x3d5>S5]
51:  goto  668 //[S5]
[S0-0x3d5>S5]:
54:  iload_2 // LocalVariable{type=int, simpleName=cc}
55:  bipush 39
57:  if_icmpne 63 //[S0-'>S2]
60:  goto  390 //[S2]
[S0-'>S2]:
63:  iload_2 // LocalVariable{type=int, simpleName=cc}
64:  bipush 33
66:  if_icmplt 78 //[S0-!-&>S(1)]
69:  iload_2 // LocalVariable{type=int, simpleName=cc}
70:  bipush 39
72:  if_icmpge 78 //[S0-!-&>S(1)]
75:  goto  156 //[S(1)]
[S0-!-&>S(1)]:
78:  iload_2 // LocalVariable{type=int, simpleName=cc}
79:  ldc 150
81:  if_icmplt 93 //[S0-Ø-ö>S(1)]
84:  iload_2 // LocalVariable{type=int, simpleName=cc}
85:  ldc 151
87:  if_icmpge 93 //[S0-Ø-ö>S(1)]
90:  goto  156 //[S(1)]
[S0-Ø-ö>S(1)]:
93:  iload_2 // LocalVariable{type=int, simpleName=cc}
94:  ldc 152
96:  if_icmplt 108 //[S0-À-Ö>S(1)]
99:  iload_2 // LocalVariable{type=int, simpleName=cc}
100:  ldc 153
102:  if_icmpge 108 //[S0-À-Ö>S(1)]
105:  goto  156 //[S(1)]
[S0-À-Ö>S(1)]:
108:  iload_2 // LocalVariable{type=int, simpleName=cc}
109:  bipush 126
111:  if_icmplt 123 //[S0-~->S(1)]
114:  iload_2 // LocalVariable{type=int, simpleName=cc}
115:  ldc 154
117:  if_icmpge 123 //[S0-~->S(1)]
120:  goto  156 //[S(1)]
[S0-~->S(1)]:
123:  iload_2 // LocalVariable{type=int, simpleName=cc}
124:  bipush 64
126:  if_icmplt 138 //[S0-@-_>S(1)]
129:  iload_2 // LocalVariable{type=int, simpleName=cc}
130:  bipush 96
132:  if_icmpge 138 //[S0-@-_>S(1)]
135:  goto  156 //[S(1)]
[S0-@-_>S(1)]:
138:  iload_2 // LocalVariable{type=int, simpleName=cc}
139:  ldc 155
141:  if_icmpne 147 //[S0-0x3a3>S4]
144:  goto  642 //[S4]
[S0-0x3a3>S4]:
147:  iload_2 // LocalVariable{type=int, simpleName=cc}
148:  bipush 96
150:  if_icmpne 694 //[error]
153:  goto  516 //[S3]
[S(1)]:
156:  bipush 7
158:  istore_3 // LocalVariable{type=int, simpleName=accepted}
159:  aload_1 // ElementImpl{name=reader}
160:  invokevirtual 137 // read ()I
163:  istore_2 // LocalVariable{type=int, simpleName=cc}
164:  iload_2 // LocalVariable{type=int, simpleName=cc}
165:  iflt 711 //[eof]
168:  iload_2 // LocalVariable{type=int, simpleName=cc}
169:  bipush 45
171:  if_icmplt 183 //[S(1)--->>S(6)]
174:  iload_2 // LocalVariable{type=int, simpleName=cc}
175:  bipush 63
177:  if_icmpge 183 //[S(1)--->>S(6)]
180:  goto  273 //[S(6)]
[S(1)--->>S(6)]:
183:  iload_2 // LocalVariable{type=int, simpleName=cc}
184:  bipush 97 //'a'
186:  if_icmplt 198 //[S(1)-a-{>S(6)]
189:  iload_2 // LocalVariable{type=int, simpleName=cc}
190:  bipush 124
192:  if_icmpge 198 //[S(1)-a-{>S(6)]
195:  goto  273 //[S(6)]
[S(1)-a-{>S(6)]:
198:  iload_2 // LocalVariable{type=int, simpleName=cc}
199:  bipush 33
201:  if_icmplt 213 //[S(1)-!-&>S(6)]
204:  iload_2 // LocalVariable{type=int, simpleName=cc}
205:  bipush 39
207:  if_icmpge 213 //[S(1)-!-&>S(6)]
210:  goto  273 //[S(6)]
[S(1)-!-&>S(6)]:
213:  iload_2 // LocalVariable{type=int, simpleName=cc}
214:  ldc 150
216:  if_icmplt 228 //[S(1)-Ø-ö>S(6)]
219:  iload_2 // LocalVariable{type=int, simpleName=cc}
220:  ldc 151
222:  if_icmpge 228 //[S(1)-Ø-ö>S(6)]
225:  goto  273 //[S(6)]
[S(1)-Ø-ö>S(6)]:
228:  iload_2 // LocalVariable{type=int, simpleName=cc}
229:  ldc 152
231:  if_icmplt 243 //[S(1)-À-Ö>S(6)]
234:  iload_2 // LocalVariable{type=int, simpleName=cc}
235:  ldc 153
237:  if_icmpge 243 //[S(1)-À-Ö>S(6)]
240:  goto  273 //[S(6)]
[S(1)-À-Ö>S(6)]:
243:  iload_2 // LocalVariable{type=int, simpleName=cc}
244:  bipush 126
246:  if_icmplt 258 //[S(1)-~->S(6)]
249:  iload_2 // LocalVariable{type=int, simpleName=cc}
250:  ldc 154
252:  if_icmpge 258 //[S(1)-~->S(6)]
255:  goto  273 //[S(6)]
[S(1)-~->S(6)]:
258:  iload_2 // LocalVariable{type=int, simpleName=cc}
259:  bipush 64
261:  if_icmplt 694 //[error]
264:  iload_2 // LocalVariable{type=int, simpleName=cc}
265:  bipush 96
267:  if_icmpge 694 //[error]
270:  goto  273 //[S(6)]
[S(6)]:
273:  bipush 7
275:  istore_3 // LocalVariable{type=int, simpleName=accepted}
276:  aload_1 // ElementImpl{name=reader}
277:  invokevirtual 137 // read ()I
280:  istore_2 // LocalVariable{type=int, simpleName=cc}
281:  iload_2 // LocalVariable{type=int, simpleName=cc}
282:  iflt 711 //[eof]
285:  iload_2 // LocalVariable{type=int, simpleName=cc}
286:  bipush 45
288:  if_icmplt 300 //[S(6)--->>S(6)]
291:  iload_2 // LocalVariable{type=int, simpleName=cc}
292:  bipush 63
294:  if_icmpge 300 //[S(6)--->>S(6)]
297:  goto  273 //[S(6)]
[S(6)--->>S(6)]:
300:  iload_2 // LocalVariable{type=int, simpleName=cc}
301:  bipush 97 //'a'
303:  if_icmplt 315 //[S(6)-a-{>S(6)]
306:  iload_2 // LocalVariable{type=int, simpleName=cc}
307:  bipush 124
309:  if_icmpge 315 //[S(6)-a-{>S(6)]
312:  goto  273 //[S(6)]
[S(6)-a-{>S(6)]:
315:  iload_2 // LocalVariable{type=int, simpleName=cc}
316:  bipush 33
318:  if_icmplt 330 //[S(6)-!-&>S(6)]
321:  iload_2 // LocalVariable{type=int, simpleName=cc}
322:  bipush 39
324:  if_icmpge 330 //[S(6)-!-&>S(6)]
327:  goto  273 //[S(6)]
[S(6)-!-&>S(6)]:
330:  iload_2 // LocalVariable{type=int, simpleName=cc}
331:  ldc 150
333:  if_icmplt 345 //[S(6)-Ø-ö>S(6)]
336:  iload_2 // LocalVariable{type=int, simpleName=cc}
337:  ldc 151
339:  if_icmpge 345 //[S(6)-Ø-ö>S(6)]
342:  goto  273 //[S(6)]
[S(6)-Ø-ö>S(6)]:
345:  iload_2 // LocalVariable{type=int, simpleName=cc}
346:  ldc 152
348:  if_icmplt 360 //[S(6)-À-Ö>S(6)]
351:  iload_2 // LocalVariable{type=int, simpleName=cc}
352:  ldc 153
354:  if_icmpge 360 //[S(6)-À-Ö>S(6)]
357:  goto  273 //[S(6)]
[S(6)-À-Ö>S(6)]:
360:  iload_2 // LocalVariable{type=int, simpleName=cc}
361:  bipush 126
363:  if_icmplt 375 //[S(6)-~->S(6)]
366:  iload_2 // LocalVariable{type=int, simpleName=cc}
367:  ldc 154
369:  if_icmpge 375 //[S(6)-~->S(6)]
372:  goto  273 //[S(6)]
[S(6)-~->S(6)]:
375:  iload_2 // LocalVariable{type=int, simpleName=cc}
376:  bipush 64
378:  if_icmplt 694 //[error]
381:  iload_2 // LocalVariable{type=int, simpleName=cc}
382:  bipush 96
384:  if_icmpge 694 //[error]
387:  goto  273 //[S(6)]
[S2]:
390:  iconst_m1
391:  istore_3 // LocalVariable{type=int, simpleName=accepted}
392:  aload_1 // ElementImpl{name=reader}
393:  invokevirtual 137 // read ()I
396:  istore_2 // LocalVariable{type=int, simpleName=cc}
397:  iload_2 // LocalVariable{type=int, simpleName=cc}
398:  iflt 711 //[eof]
401:  iload_2 // LocalVariable{type=int, simpleName=cc}
402:  bipush 40
404:  if_icmplt 410 //[S2-(->S7]
407:  goto  424 //[S7]
[S2-(->S7]:
410:  iload_2 // LocalVariable{type=int, simpleName=cc}
411:  iconst_0
412:  if_icmplt 694 //[error]
415:  iload_2 // LocalVariable{type=int, simpleName=cc}
416:  bipush 39
418:  if_icmpge 694 //[error]
421:  goto  424 //[S7]
[S7]:
424:  iconst_m1
425:  istore_3 // LocalVariable{type=int, simpleName=accepted}
426:  aload_1 // ElementImpl{name=reader}
427:  invokevirtual 137 // read ()I
430:  istore_2 // LocalVariable{type=int, simpleName=cc}
431:  iload_2 // LocalVariable{type=int, simpleName=cc}
432:  iflt 711 //[eof]
435:  iload_2 // LocalVariable{type=int, simpleName=cc}
436:  bipush 39
438:  if_icmpne 444 //[S7-'>S(12)]
441:  goto  510 //[S(12)]
[S7-'>S(12)]:
444:  iload_2 // LocalVariable{type=int, simpleName=cc}
445:  bipush 40
447:  if_icmplt 453 //[S7-(->S11]
450:  goto  467 //[S11]
[S7-(->S11]:
453:  iload_2 // LocalVariable{type=int, simpleName=cc}
454:  iconst_0
455:  if_icmplt 694 //[error]
458:  iload_2 // LocalVariable{type=int, simpleName=cc}
459:  bipush 39
461:  if_icmpge 694 //[error]
464:  goto  467 //[S11]
[S11]:
467:  iconst_m1
468:  istore_3 // LocalVariable{type=int, simpleName=accepted}
469:  aload_1 // ElementImpl{name=reader}
470:  invokevirtual 137 // read ()I
473:  istore_2 // LocalVariable{type=int, simpleName=cc}
474:  iload_2 // LocalVariable{type=int, simpleName=cc}
475:  iflt 711 //[eof]
478:  iload_2 // LocalVariable{type=int, simpleName=cc}
479:  bipush 39
481:  if_icmpne 487 //[S11-'>S(12)]
484:  goto  510 //[S(12)]
[S11-'>S(12)]:
487:  iload_2 // LocalVariable{type=int, simpleName=cc}
488:  bipush 40
490:  if_icmplt 496 //[S11-(->S11]
493:  goto  467 //[S11]
[S11-(->S11]:
496:  iload_2 // LocalVariable{type=int, simpleName=cc}
497:  iconst_0
498:  if_icmplt 694 //[error]
501:  iload_2 // LocalVariable{type=int, simpleName=cc}
502:  bipush 39
504:  if_icmpge 694 //[error]
507:  goto  467 //[S11]
[S(12)]:
510:  bipush 6
512:  istore_3 // LocalVariable{type=int, simpleName=accepted}
513:  goto  709 //[exit]
[S3]:
516:  iconst_m1
517:  istore_3 // LocalVariable{type=int, simpleName=accepted}
518:  aload_1 // ElementImpl{name=reader}
519:  invokevirtual 137 // read ()I
522:  istore_2 // LocalVariable{type=int, simpleName=cc}
523:  iload_2 // LocalVariable{type=int, simpleName=cc}
524:  iflt 711 //[eof]
527:  iload_2 // LocalVariable{type=int, simpleName=cc}
528:  ldc 156
530:  if_icmplt 536 //[S3-µ->S8]
533:  goto  550 //[S8]
[S3-µ->S8]:
536:  iload_2 // LocalVariable{type=int, simpleName=cc}
537:  iconst_0
538:  if_icmplt 694 //[error]
541:  iload_2 // LocalVariable{type=int, simpleName=cc}
542:  ldc 157
544:  if_icmpge 694 //[error]
547:  goto  550 //[S8]
[S8]:
550:  iconst_m1
551:  istore_3 // LocalVariable{type=int, simpleName=accepted}
552:  aload_1 // ElementImpl{name=reader}
553:  invokevirtual 137 // read ()I
556:  istore_2 // LocalVariable{type=int, simpleName=cc}
557:  iload_2 // LocalVariable{type=int, simpleName=cc}
558:  iflt 711 //[eof]
561:  iload_2 // LocalVariable{type=int, simpleName=cc}
562:  ldc 156
564:  if_icmplt 570 //[S8-µ->S13]
567:  goto  593 //[S13]
[S8-µ->S13]:
570:  iload_2 // LocalVariable{type=int, simpleName=cc}
571:  ldc 157
573:  if_icmpne 579 //[S8-´>S(14)]
576:  goto  636 //[S(14)]
[S8-´>S(14)]:
579:  iload_2 // LocalVariable{type=int, simpleName=cc}
580:  iconst_0
581:  if_icmplt 694 //[error]
584:  iload_2 // LocalVariable{type=int, simpleName=cc}
585:  ldc 157
587:  if_icmpge 694 //[error]
590:  goto  593 //[S13]
[S13]:
593:  iconst_m1
594:  istore_3 // LocalVariable{type=int, simpleName=accepted}
595:  aload_1 // ElementImpl{name=reader}
596:  invokevirtual 137 // read ()I
599:  istore_2 // LocalVariable{type=int, simpleName=cc}
600:  iload_2 // LocalVariable{type=int, simpleName=cc}
601:  iflt 711 //[eof]
604:  iload_2 // LocalVariable{type=int, simpleName=cc}
605:  ldc 156
607:  if_icmplt 613 //[S13-µ->S13]
610:  goto  593 //[S13]
[S13-µ->S13]:
613:  iload_2 // LocalVariable{type=int, simpleName=cc}
614:  ldc 157
616:  if_icmpne 622 //[S13-´>S(14)]
619:  goto  636 //[S(14)]
[S13-´>S(14)]:
622:  iload_2 // LocalVariable{type=int, simpleName=cc}
623:  iconst_0
624:  if_icmplt 694 //[error]
627:  iload_2 // LocalVariable{type=int, simpleName=cc}
628:  ldc 157
630:  if_icmpge 694 //[error]
633:  goto  593 //[S13]
[S(14)]:
636:  bipush 6
638:  istore_3 // LocalVariable{type=int, simpleName=accepted}
639:  goto  709 //[exit]
[S4]:
642:  iconst_m1
643:  istore_3 // LocalVariable{type=int, simpleName=accepted}
644:  aload_1 // ElementImpl{name=reader}
645:  invokevirtual 137 // read ()I
648:  istore_2 // LocalVariable{type=int, simpleName=cc}
649:  iload_2 // LocalVariable{type=int, simpleName=cc}
650:  iflt 711 //[eof]
653:  iload_2 // LocalVariable{type=int, simpleName=cc}
654:  bipush 123
656:  if_icmpeq 662 //[S4-{>S(9), S(9)]
659:  goto  694 //[error]
[S4-{>S(9), S(9)]:
662:  bipush 14
664:  istore_3 // LocalVariable{type=int, simpleName=accepted}
665:  goto  709 //[exit]
[S5]:
668:  iconst_m1
669:  istore_3 // LocalVariable{type=int, simpleName=accepted}
670:  aload_1 // ElementImpl{name=reader}
671:  invokevirtual 137 // read ()I
674:  istore_2 // LocalVariable{type=int, simpleName=cc}
675:  iload_2 // LocalVariable{type=int, simpleName=cc}
676:  iflt 711 //[eof]
679:  iload_2 // LocalVariable{type=int, simpleName=cc}
680:  bipush 123
682:  if_icmpeq 688 //[S5-{>S(10), S(10)]
685:  goto  694 //[error]
[S5-{>S(10), S(10)]:
688:  bipush 17
690:  istore_3 // LocalVariable{type=int, simpleName=accepted}
691:  goto  709 //[exit]
[error]:
694:  iload_3 // LocalVariable{type=int, simpleName=accepted}
695:  iconst_m1
696:  if_icmpne 701 //[pushback]
699:  iload_3 // LocalVariable{type=int, simpleName=accepted}
700:  ireturn
[pushback]:
701:  aload_1 // ElementImpl{name=reader}
702:  iload_2 // LocalVariable{type=int, simpleName=cc}
703:  invokevirtual 141 // unread (I)V
706:  goto  709 //[exit]
[exit]:
709:  iload_3 // LocalVariable{type=int, simpleName=accepted}
710:  ireturn
[eof]:
711:  iload_3 // LocalVariable{type=int, simpleName=accepted}
712:  iconst_m1
713:  if_icmpne 718 //[eofacc]
716:  iconst_0
717:  ireturn
[eofacc]:
718:  iload_3 // LocalVariable{type=int, simpleName=accepted}
719:  ireturn
$input4(Lorg/vesalainen/parser/util/InputReader;)I
[start]:
0:  iconst_m1
1:  istore_2 // LocalVariable{type=int, simpleName=cc}
2:  iconst_m1
3:  istore_3 // LocalVariable{type=int, simpleName=accepted}
[S0]:
4:  iconst_m1
5:  istore_3 // LocalVariable{type=int, simpleName=accepted}
6:  aload_1 // ElementImpl{name=reader}
7:  invokevirtual 137 // read ()I
10:  istore_2 // LocalVariable{type=int, simpleName=cc}
11:  iload_2 // LocalVariable{type=int, simpleName=cc}
12:  iflt 115 //[eof]
15:  iload_2 // LocalVariable{type=int, simpleName=cc}
16:  lookupswitch // default -> [error]
   // 124 -> [S0-|>S(1), S(1)]
   // 125 -> [S0-}>S(2), S(2)]
   // 191 -> [S0-¿>S(3), S(3)]
   // 8853 -> [S0-0x2295>S(4), S(4)]
   // 8859 -> [S0-0x229b>S(5), S(5)]
[S0-|>S(1), S(1)]:
68:  bipush 8
70:  istore_3 // LocalVariable{type=int, simpleName=accepted}
71:  goto  113 //[exit]
[S0-}>S(2), S(2)]:
74:  bipush 15
76:  istore_3 // LocalVariable{type=int, simpleName=accepted}
77:  goto  113 //[exit]
[S0-¿>S(3), S(3)]:
80:  bipush 13
82:  istore_3 // LocalVariable{type=int, simpleName=accepted}
83:  goto  113 //[exit]
[S0-0x2295>S(4), S(4)]:
86:  bipush 12
88:  istore_3 // LocalVariable{type=int, simpleName=accepted}
89:  goto  113 //[exit]
[S0-0x229b>S(5), S(5)]:
92:  bipush 11
94:  istore_3 // LocalVariable{type=int, simpleName=accepted}
95:  goto  113 //[exit]
[error]:
98:  iload_3 // LocalVariable{type=int, simpleName=accepted}
99:  iconst_m1
100:  if_icmpne 105 //[pushback]
103:  iload_3 // LocalVariable{type=int, simpleName=accepted}
104:  ireturn
[pushback]:
105:  aload_1 // ElementImpl{name=reader}
106:  iload_2 // LocalVariable{type=int, simpleName=cc}
107:  invokevirtual 141 // unread (I)V
110:  goto  113 //[exit]
[exit]:
113:  iload_3 // LocalVariable{type=int, simpleName=accepted}
114:  ireturn
[eof]:
115:  iload_3 // LocalVariable{type=int, simpleName=accepted}
116:  iconst_m1
117:  if_icmpne 122 //[eofacc]
120:  iconst_0
121:  ireturn
[eofacc]:
122:  iload_3 // LocalVariable{type=int, simpleName=accepted}
123:  ireturn
$input6(Lorg/vesalainen/parser/util/InputReader;)I
[start]:
0:  iconst_m1
1:  istore_2 // LocalVariable{type=int, simpleName=cc}
2:  iconst_m1
3:  istore_3 // LocalVariable{type=int, simpleName=accepted}
[S0]:
4:  iconst_m1
5:  istore_3 // LocalVariable{type=int, simpleName=accepted}
6:  aload_1 // ElementImpl{name=reader}
7:  invokevirtual 137 // read ()I
10:  istore_2 // LocalVariable{type=int, simpleName=cc}
11:  iload_2 // LocalVariable{type=int, simpleName=cc}
12:  iflt 115 //[eof]
15:  iload_2 // LocalVariable{type=int, simpleName=cc}
16:  lookupswitch // default -> [error]
   // 44 -> [S0-,>S(1), S(1)]
   // 125 -> [S0-}>S(2), S(2)]
   // 191 -> [S0-¿>S(3), S(3)]
   // 8853 -> [S0-0x2295>S(4), S(4)]
   // 8859 -> [S0-0x229b>S(5), S(5)]
[S0-,>S(1), S(1)]:
68:  bipush 9
70:  istore_3 // LocalVariable{type=int, simpleName=accepted}
71:  goto  113 //[exit]
[S0-}>S(2), S(2)]:
74:  bipush 15
76:  istore_3 // LocalVariable{type=int, simpleName=accepted}
77:  goto  113 //[exit]
[S0-¿>S(3), S(3)]:
80:  bipush 13
82:  istore_3 // LocalVariable{type=int, simpleName=accepted}
83:  goto  113 //[exit]
[S0-0x2295>S(4), S(4)]:
86:  bipush 12
88:  istore_3 // LocalVariable{type=int, simpleName=accepted}
89:  goto  113 //[exit]
[S0-0x229b>S(5), S(5)]:
92:  bipush 11
94:  istore_3 // LocalVariable{type=int, simpleName=accepted}
95:  goto  113 //[exit]
[error]:
98:  iload_3 // LocalVariable{type=int, simpleName=accepted}
99:  iconst_m1
100:  if_icmpne 105 //[pushback]
103:  iload_3 // LocalVariable{type=int, simpleName=accepted}
104:  ireturn
[pushback]:
105:  aload_1 // ElementImpl{name=reader}
106:  iload_2 // LocalVariable{type=int, simpleName=cc}
107:  invokevirtual 141 // unread (I)V
110:  goto  113 //[exit]
[exit]:
113:  iload_3 // LocalVariable{type=int, simpleName=accepted}
114:  ireturn
[eof]:
115:  iload_3 // LocalVariable{type=int, simpleName=accepted}
116:  iconst_m1
117:  if_icmpne 122 //[eofacc]
120:  iconst_0
121:  ireturn
[eofacc]:
122:  iload_3 // LocalVariable{type=int, simpleName=accepted}
123:  ireturn
$input3(Lorg/vesalainen/parser/util/InputReader;)I
[start]:
0:  iconst_m1
1:  istore_2 // LocalVariable{type=int, simpleName=cc}
2:  iconst_m1
3:  istore_3 // LocalVariable{type=int, simpleName=accepted}
[S0]:
4:  iconst_m1
5:  istore_3 // LocalVariable{type=int, simpleName=accepted}
6:  aload_1 // ElementImpl{name=reader}
7:  invokevirtual 137 // read ()I
10:  istore_2 // LocalVariable{type=int, simpleName=cc}
11:  iload_2 // LocalVariable{type=int, simpleName=cc}
12:  iflt 69 //[eof]
15:  iload_2 // LocalVariable{type=int, simpleName=cc}
16:  tableswitch // default -> [error]
   // 124 -> [S0-|>S(1), S(1)]
   // 125 -> [S0-}>S(2), S(2)]
[S0-|>S(1), S(1)]:
40:  bipush 8
42:  istore_3 // LocalVariable{type=int, simpleName=accepted}
43:  goto  67 //[exit]
[S0-}>S(2), S(2)]:
46:  bipush 15
48:  istore_3 // LocalVariable{type=int, simpleName=accepted}
49:  goto  67 //[exit]
[error]:
52:  iload_3 // LocalVariable{type=int, simpleName=accepted}
53:  iconst_m1
54:  if_icmpne 59 //[pushback]
57:  iload_3 // LocalVariable{type=int, simpleName=accepted}
58:  ireturn
[pushback]:
59:  aload_1 // ElementImpl{name=reader}
60:  iload_2 // LocalVariable{type=int, simpleName=cc}
61:  invokevirtual 141 // unread (I)V
64:  goto  67 //[exit]
[exit]:
67:  iload_3 // LocalVariable{type=int, simpleName=accepted}
68:  ireturn
[eof]:
69:  iload_3 // LocalVariable{type=int, simpleName=accepted}
70:  iconst_m1
71:  if_icmpne 76 //[eofacc]
74:  iconst_0
75:  ireturn
[eofacc]:
76:  iload_3 // LocalVariable{type=int, simpleName=accepted}
77:  ireturn
